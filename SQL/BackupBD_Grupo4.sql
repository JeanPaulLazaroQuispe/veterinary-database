--------------------------------------------------------
-- Archivo creado  - viernes-junio-24-2022   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table AUDITORIA
--------------------------------------------------------

  CREATE TABLE "AUDITORIA" 
   (	"CODIGOC" CHAR(4), 
	"DNI_CIT" CHAR(8), 
	"CODIGOR" CHAR(4), 
	"FH" DATE
   ) ;
--------------------------------------------------------
--  DDL for Table CITA
--------------------------------------------------------

  CREATE TABLE "CITA" 
   (	"ID_CITA" CHAR(4), 
	"DNI_CLI" CHAR(8), 
	"ID_RECEPCIONISTA" CHAR(4), 
	"MONTO" NUMBER(*,0), 
	"FECHA_AT" DATE
   ) ;
  GRANT DELETE ON "CITA" TO "ROLEJL";
  GRANT INSERT ON "CITA" TO "ROLEJL";
  GRANT SELECT ON "CITA" TO "ROLEJL";
  GRANT UPDATE ON "CITA" TO "ROLEJL";
--------------------------------------------------------
--  DDL for Table CLIENTE
--------------------------------------------------------

  CREATE TABLE "CLIENTE" 
   (	"DNI" CHAR(8), 
	"NOMBRE_CLI" VARCHAR2(50), 
	"APELLIDO_CLI" VARCHAR2(50), 
	"DIRECCION" VARCHAR2(80), 
	"N_TELEFONICO" CHAR(8) DEFAULT '********'
   ) ;
  GRANT DELETE ON "CLIENTE" TO "ROLEJL";
  GRANT INSERT ON "CLIENTE" TO "ROLEJL";
  GRANT SELECT ON "CLIENTE" TO "ROLEJL";
  GRANT UPDATE ON "CLIENTE" TO "ROLEJL";
--------------------------------------------------------
--  DDL for Table DIAGNOSTICO
--------------------------------------------------------

  CREATE TABLE "DIAGNOSTICO" 
   (	"ID_DIAGNOSTICO" CHAR(4), 
	"ID_MASCOTA" CHAR(4), 
	"COD_MEDICO" CHAR(4), 
	"ID_CITA" CHAR(4), 
	"COD_HISTORIAL" CHAR(4), 
	"ENFERMEDAD" VARCHAR2(30)
   ) ;
  GRANT DELETE ON "DIAGNOSTICO" TO "ROLEJL";
  GRANT INSERT ON "DIAGNOSTICO" TO "ROLEJL";
  GRANT SELECT ON "DIAGNOSTICO" TO "ROLEJL";
  GRANT UPDATE ON "DIAGNOSTICO" TO "ROLEJL";
--------------------------------------------------------
--  DDL for Table HISTORIAL_MEDICO
--------------------------------------------------------

  CREATE TABLE "HISTORIAL_MEDICO" 
   (	"COD_HISTORIAL" CHAR(4), 
	"ID_MASCOTA" CHAR(4), 
	"DESCRIPCION" VARCHAR2(50)
   ) ;
  GRANT DELETE ON "HISTORIAL_MEDICO" TO "ROLEJL";
  GRANT INSERT ON "HISTORIAL_MEDICO" TO "ROLEJL";
  GRANT SELECT ON "HISTORIAL_MEDICO" TO "ROLEJL";
  GRANT UPDATE ON "HISTORIAL_MEDICO" TO "ROLEJL";
--------------------------------------------------------
--  DDL for Table LABORATORIO
--------------------------------------------------------

  CREATE TABLE "LABORATORIO" 
   (	"ID_MEDICAMENTO" CHAR(4), 
	"MEDICAMENTO" VARCHAR2(50), 
	"CANTIDAD" NUMBER(*,0), 
	"FECHA_FABRI" DATE, 
	"FECHA_VEN" DATE
   ) ;
  GRANT DELETE ON "LABORATORIO" TO "ROLEJL";
  GRANT INSERT ON "LABORATORIO" TO "ROLEJL";
  GRANT SELECT ON "LABORATORIO" TO "ROLEJL";
  GRANT UPDATE ON "LABORATORIO" TO "ROLEJL";
--------------------------------------------------------
--  DDL for Table MASCOTA
--------------------------------------------------------

  CREATE TABLE "MASCOTA" 
   (	"ID_MASCOTA" CHAR(4), 
	"NOMBRE_MAS" VARCHAR2(50), 
	"TIPO" VARCHAR2(20), 
	"RAZA" VARCHAR2(30), 
	"EDAD" NUMBER, 
	"DNI" CHAR(8)
   ) ;
  GRANT DELETE ON "MASCOTA" TO "ROLEJL";
  GRANT INSERT ON "MASCOTA" TO "ROLEJL";
  GRANT SELECT ON "MASCOTA" TO "ROLEJL";
  GRANT UPDATE ON "MASCOTA" TO "ROLEJL";
--------------------------------------------------------
--  DDL for Table MEDICO
--------------------------------------------------------

  CREATE TABLE "MEDICO" 
   (	"COD_MEDICO" CHAR(4), 
	"NOMBRE_D" VARCHAR2(50), 
	"APELLIDO_D" VARCHAR2(50), 
	"CORREO" VARCHAR2(30), 
	"ESPECIALIDAD" VARCHAR2(30), 
	"EDAD" NUMBER
   ) ;
  GRANT DELETE ON "MEDICO" TO "ROLEJL";
  GRANT INSERT ON "MEDICO" TO "ROLEJL";
  GRANT SELECT ON "MEDICO" TO "ROLEJL";
  GRANT UPDATE ON "MEDICO" TO "ROLEJL";
--------------------------------------------------------
--  DDL for Table RECEPCION
--------------------------------------------------------

  CREATE TABLE "RECEPCION" 
   (	"ID_RECEPCIONISTA" CHAR(4), 
	"NOMBRE_REC" VARCHAR2(50), 
	"APELLIDO_REC" VARCHAR2(50), 
	"EDAD_REC" NUMBER
   ) ;
  GRANT DELETE ON "RECEPCION" TO "ROLEJL";
  GRANT INSERT ON "RECEPCION" TO "ROLEJL";
  GRANT SELECT ON "RECEPCION" TO "ROLEJL";
  GRANT UPDATE ON "RECEPCION" TO "ROLEJL";
--------------------------------------------------------
--  DDL for Table RECETA
--------------------------------------------------------

  CREATE TABLE "RECETA" 
   (	"ID_RECETA" CHAR(4), 
	"ID_MEDICAMENTO" CHAR(4), 
	"ID_DIAGNOSTICO" CHAR(4), 
	"FECHA_HOY" DATE
   ) ;
  GRANT DELETE ON "RECETA" TO "ROLEJL";
  GRANT INSERT ON "RECETA" TO "ROLEJL";
  GRANT SELECT ON "RECETA" TO "ROLEJL";
  GRANT UPDATE ON "RECETA" TO "ROLEJL";
--------------------------------------------------------
--  DDL for Table RECIBO
--------------------------------------------------------

  CREATE TABLE "RECIBO" 
   (	"ID_RECIBO" CHAR(4), 
	"ID_RECETA" CHAR(4), 
	"DNI" CHAR(8), 
	"MONTO" NUMBER(*,0), 
	"FECHA_HOY" DATE
   ) ;
  GRANT DELETE ON "RECIBO" TO "ROLEJL";
  GRANT INSERT ON "RECIBO" TO "ROLEJL";
  GRANT SELECT ON "RECIBO" TO "ROLEJL";
  GRANT UPDATE ON "RECIBO" TO "ROLEJL";
--------------------------------------------------------
--  DDL for Table TOP5
--------------------------------------------------------

  CREATE TABLE "TOP5" 
   (	"DNII" CHAR(8), 
	"NOMBRE" VARCHAR2(60), 
	"CANTIDAD" NUMBER
   ) ;
--------------------------------------------------------
--  DDL for View VW_TRANSACCIÓN_DE_CITA
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "VW_TRANSACCIÓN_DE_CITA" ("DATO_DEL_CLIENTE", "DIRECCION", "NOMBRE_MASCOTA", "TIPO", "RAZA", "TELEFONO", "DNI", "DATO_RECEPCION", "MONTO", "FECHA_AT") AS 
  select b.NOMBRE_CLI ||' '|| b.APELLIDO_CLI Dato_del_Cliente, b.DIRECCION, e.NOMBRE_MAS Nombre_Mascota, e.TIPO, e.Raza,
b.N_TELEFONICO Telefono, b.DNI, c.NOMBRE_REC ||' '|| c.APELLIDO_REC Dato_Recepcion, a.MONTO, a.FECHA_AT 
from Cliente b 
inner join Cita a on b.DNI = a.DNI_CLI 
inner join Recepcion c on c.ID_RECEPCIONISTA = a.ID_RECEPCIONISTA
inner join Diagnostico d on a.ID_CITA = d.ID_CITA
inner join Mascota e on e.ID_MASCOTA = d.ID_MASCOTA
;
--------------------------------------------------------
--  DDL for View VW_TRANSACCIÓN_DE_DIAGNOSTICO
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "VW_TRANSACCIÓN_DE_DIAGNOSTICO" ("NOMBRE_MASCOTA", "TIPO", "RAZA", "DATO_DUEÑO", "DATO_MEDICO", "ENFERMEDAD") AS 
  select b.NOMBRE_MAS Nombre_Mascota, b.tipo ,b.RAZA, 
a.NOMBRE_CLI ||' '|| a.APELLIDO_CLI Dato_Dueño, d.NOMBRE_D ||' '|| d.APELLIDO_D Dato_Medico, c.ENFERMEDAD
from Cliente a 
inner join Mascota b on a.DNI = b.DNI
inner join Diagnostico c on b.ID_MASCOTA = c.ID_MASCOTA
inner join Medico d on d.COD_MEDICO = c.COD_MEDICO
;
--------------------------------------------------------
--  DDL for View VW_TRANSACCIÓN_DE_RECETA
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "VW_TRANSACCIÓN_DE_RECETA" ("DATO_CLIENTE", "DNI", "NOMBRE_MASCOTA", "TIPO", "RAZA", "MEDICAMENTO", "FECHA_ATENCION", "DATO_MEDICO") AS 
  select f.NOMBRE_CLI ||' '|| f.APELLIDO_CLI Dato_Cliente, 
f.DNI, e.NOMBRE_MAS Nombre_Mascota, e.tipo, e.RAZA, a.MEDICAMENTO, b.FECHA_HOY Fecha_Atencion,
d.NOMBRE_D ||' '|| d.APELLIDO_D Dato_Medico from Laboratorio a 
inner join Receta b on a.ID_MEDICAMENTO = b.ID_MEDICAMENTO
inner join Diagnostico c on c.ID_DIAGNOSTICO = b.ID_DIAGNOSTICO
inner join Medico d on d.COD_MEDICO = c.COD_MEDICO
inner join Mascota e on e.ID_MASCOTA = c.ID_MASCOTA
inner join Cliente f on f.DNI = e.DNI
;
--------------------------------------------------------
--  DDL for View VW_TRANSACCIÓN_DE_RECIBO
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "VW_TRANSACCIÓN_DE_RECIBO" ("MEDICAMENTO", "DATO_CLIENTE", "DNI", "FECHA_HOY", "MONTO") AS 
  select a.MEDICAMENTO, d.NOMBRE_CLI ||' '|| d.APELLIDO_CLI Dato_Cliente, 
d.DNI, c.FECHA_HOY, c.MONTO from Laboratorio a 
inner join Receta b on a.ID_MEDICAMENTO = b.ID_MEDICAMENTO
inner join Recibo c on b.ID_RECETA = c.ID_RECETA
inner join Cliente d on d.DNI = c.DNI
;
REM INSERTING into AUDITORIA
SET DEFINE OFF;
Insert into AUDITORIA (CODIGOC,DNI_CIT,CODIGOR,FH) values ('C056','70232203','R002',to_date('04/06/22','DD/MM/RR'));
commit;
REM INSERTING into CITA
SET DEFINE OFF;
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C001','77345213','R001',30,to_date('17/02/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C002','72345623','R002',30,to_date('17/02/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C003','79382394','R001',30,to_date('17/02/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C004','72354097','R003',30,to_date('18/02/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C005','71232596','R002',30,to_date('18/02/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C006','75232554','R001',30,to_date('19/02/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C007','74232231','R001',30,to_date('19/02/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C008','71232123','R002',30,to_date('21/02/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C009','73232599','R004',30,to_date('24/02/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C010','71232111','R008',30,to_date('28/02/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C011','72232102','R006',30,to_date('02/03/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C012','70232203','R003',30,to_date('08/03/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C013','79212114','R005',30,to_date('10/03/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C014','77232105','R010',30,to_date('11/03/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C015','77132126','R009',30,to_date('18/03/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C016','78732187','R001',30,to_date('20/03/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C017','72232108','R006',30,to_date('21/04/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C018','75232109','R002',30,to_date('23/04/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C019','77232110','R010',30,to_date('29/04/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C020','74232111','R009',30,to_date('04/05/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C021','70034445','R001',30,to_date('08/05/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C022','71102394','R006',30,to_date('09/05/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C023','70049567','R002',30,to_date('12/05/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C024','77232119','R010',30,to_date('15/05/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C025','74232229','R009',30,to_date('22/05/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C026','77345213','R005',30,to_date('17/05/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C027','72345623','R001',30,to_date('18/05/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C028','79382394','R002',30,to_date('18/05/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C029','72354097','R008',30,to_date('19/05/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C030','71232596','R003',30,to_date('21/05/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C031','71232111','R002',30,to_date('22/05/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C032','70232203','R006',30,to_date('23/05/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C033','79212114','R002',30,to_date('24/05/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C034','77232105','R007',30,to_date('25/05/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C035','77132126','R009',30,to_date('25/05/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C036','72354097','R003',30,to_date('26/05/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C037','71232596','R006',30,to_date('27/05/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C038','71232111','R001',30,to_date('27/05/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C039','70232203','R010',30,to_date('28/05/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C040','77345213','R007',30,to_date('28/05/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C041','75232554','R002',30,to_date('29/05/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C042','73232599','R008',30,to_date('29/05/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C043','72232108','R001',30,to_date('29/05/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C044','70034445','R003',30,to_date('30/05/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C045','72354097','R002',30,to_date('30/05/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C046','72232108','R010',30,to_date('30/05/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C047','74232229','R006',30,to_date('31/05/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C048','77232105','R007',30,to_date('31/05/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C049','72354097','R009',30,to_date('31/05/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C050','79212114','R001',30,to_date('01/06/22','DD/MM/RR'));
commit;
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C051','75232554','R006',30,to_date('01/06/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C052','77232110','R008',30,to_date('02/06/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C053','72232108','R010',30,to_date('02/06/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C054','74232111','R002',30,to_date('03/06/22','DD/MM/RR'));
Insert into CITA (ID_CITA,DNI_CLI,ID_RECEPCIONISTA,MONTO,FECHA_AT) values ('C055','71232596','R001',30,to_date('03/06/22','DD/MM/RR'));
commit;
REM INSERTING into CLIENTE
SET DEFINE OFF;
Insert into CLIENTE (DNI,NOMBRE_CLI,APELLIDO_CLI,DIRECCION,N_TELEFONICO) values ('77345213','Gustavo Alonso','Salazar Guerrero','Av.Venezuela 541','97623459');
Insert into CLIENTE (DNI,NOMBRE_CLI,APELLIDO_CLI,DIRECCION,N_TELEFONICO) values ('72345623','Aldair','Gonzales Rigor','Jr.Union 211','93457823');
Insert into CLIENTE (DNI,NOMBRE_CLI,APELLIDO_CLI,DIRECCION,N_TELEFONICO) values ('79382394','Jean Pier','Villareal Bayer','2 de Mayo 124','92413869');
Insert into CLIENTE (DNI,NOMBRE_CLI,APELLIDO_CLI,DIRECCION,N_TELEFONICO) values ('72354097','Stven Leo','Messi Orga','Zorritos 611','98925486');
Insert into CLIENTE (DNI,NOMBRE_CLI,APELLIDO_CLI,DIRECCION,N_TELEFONICO) values ('71232596','Julian Renzo','Rojo Maradona','Collique 198','92351684');
Insert into CLIENTE (DNI,NOMBRE_CLI,APELLIDO_CLI,DIRECCION,N_TELEFONICO) values ('75232554','Cristian','Hernandez Hernandez','Callao 8','92453684');
Insert into CLIENTE (DNI,NOMBRE_CLI,APELLIDO_CLI,DIRECCION,N_TELEFONICO) values ('74232231','Briney','Rojas samudio','Pizarro 5','92359614');
Insert into CLIENTE (DNI,NOMBRE_CLI,APELLIDO_CLI,DIRECCION,N_TELEFONICO) values ('71232123','Julian Renzo','Mardo Modck','Collique 1','92351684');
Insert into CLIENTE (DNI,NOMBRE_CLI,APELLIDO_CLI,DIRECCION,N_TELEFONICO) values ('73232599','Brayan','Vilca Neira','Pizarro 2','92351324');
Insert into CLIENTE (DNI,NOMBRE_CLI,APELLIDO_CLI,DIRECCION,N_TELEFONICO) values ('71232111','Pasco kuku','Chino Salcedo','Cercado de Lima','97766671');
Insert into CLIENTE (DNI,NOMBRE_CLI,APELLIDO_CLI,DIRECCION,N_TELEFONICO) values ('72232102','Luis troto','Gordillo tall','Rimac','20925236');
Insert into CLIENTE (DNI,NOMBRE_CLI,APELLIDO_CLI,DIRECCION,N_TELEFONICO) values ('70232203','Pepe lopop','Bokking Hanmma','Los Olivos','34232099');
Insert into CLIENTE (DNI,NOMBRE_CLI,APELLIDO_CLI,DIRECCION,N_TELEFONICO) values ('79212114','Jorge Susano','Taipe Tapia','Pro','96517542');
Insert into CLIENTE (DNI,NOMBRE_CLI,APELLIDO_CLI,DIRECCION,N_TELEFONICO) values ('77232105','Carlos Sasuke','Lopez Ariaga','Cercado de Lima','36071303');
Insert into CLIENTE (DNI,NOMBRE_CLI,APELLIDO_CLI,DIRECCION,N_TELEFONICO) values ('77132126','Fernando turu','De Kim','Callao','37056717');
Insert into CLIENTE (DNI,NOMBRE_CLI,APELLIDO_CLI,DIRECCION,N_TELEFONICO) values ('78732187','Claudia zapot','Ramirez Vertegal','Lima','96949319');
Insert into CLIENTE (DNI,NOMBRE_CLI,APELLIDO_CLI,DIRECCION,N_TELEFONICO) values ('72232108','Claudio Soso','Quispe Admido','Cercado de Lima','66197824');
Insert into CLIENTE (DNI,NOMBRE_CLI,APELLIDO_CLI,DIRECCION,N_TELEFONICO) values ('75232109','Cristiano Sius','Rojoi Hahoo','Av.Peru','92340006');
Insert into CLIENTE (DNI,NOMBRE_CLI,APELLIDO_CLI,DIRECCION,N_TELEFONICO) values ('77232110','Pablo Pepe','Escobar Garcia','Callao','91056020');
Insert into CLIENTE (DNI,NOMBRE_CLI,APELLIDO_CLI,DIRECCION,N_TELEFONICO) values ('74232111','Carolina Norte','Milkarino Altamirano','Primera de Pro','90011232');
Insert into CLIENTE (DNI,NOMBRE_CLI,APELLIDO_CLI,DIRECCION,N_TELEFONICO) values ('77232192','Carla Kia','Vela Vorgez','Pro','24612554');
Insert into CLIENTE (DNI,NOMBRE_CLI,APELLIDO_CLI,DIRECCION,N_TELEFONICO) values ('71304902','Naruto','Benzema Tokio','Comas','91110035');
Insert into CLIENTE (DNI,NOMBRE_CLI,APELLIDO_CLI,DIRECCION,N_TELEFONICO) values ('79910327','Ferrari Toyota','Beginner Saming','Caja de Agua','92015551');
Insert into CLIENTE (DNI,NOMBRE_CLI,APELLIDO_CLI,DIRECCION,N_TELEFONICO) values ('71002101','Ocfa Octo','De la Sum','Callao','91190243');
Insert into CLIENTE (DNI,NOMBRE_CLI,APELLIDO_CLI,DIRECCION,N_TELEFONICO) values ('70034445','Joel Maldini','Nelly Gil','Lomas','94410290');
Insert into CLIENTE (DNI,NOMBRE_CLI,APELLIDO_CLI,DIRECCION,N_TELEFONICO) values ('71102394','Rodolfo Fufu','Raito Raki','Cercado de Lima','91022231');
Insert into CLIENTE (DNI,NOMBRE_CLI,APELLIDO_CLI,DIRECCION,N_TELEFONICO) values ('70049567','Pepex','Guerrero Sapallanay','La Marina','91103284');
Insert into CLIENTE (DNI,NOMBRE_CLI,APELLIDO_CLI,DIRECCION,N_TELEFONICO) values ('77232119','Yaciel Aliz','Ximena Xixo','Callao','90047565');
Insert into CLIENTE (DNI,NOMBRE_CLI,APELLIDO_CLI,DIRECCION,N_TELEFONICO) values ('74232229','Clarence Rick','Sakura Ino','2 de Mayo','90322227');
Insert into CLIENTE (DNI,NOMBRE_CLI,APELLIDO_CLI,DIRECCION,N_TELEFONICO) values ('77556213','Kiameru','Gerber Zapata','Cercado de Lima','24119023');
commit;
REM INSERTING into DIAGNOSTICO
SET DEFINE OFF;
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D001','T001','M005','C001','H001','Rabia');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D002','T002','M002','C002','H002','Parvovirus');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D003','T003','M001','C003','H003','Diarrea');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D004','T004','M003','C004','H004','Alergia Cutáneas');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D005','T005','M005','C005','H005','Rabia');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D006','T006','M008','C006','H006','Tiña');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D007','T007','M009','C007','H007','Toxocariasis');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D008','T008','M011','C008','H008','Toxoplasmosis');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D009','T009','M015','C009','H009','Cancer');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D010','T010','M003','C010','H010','Envenenamiento');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D011','T011','M001','C011','H011','Fiebre Aftosa');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D012','T012','M009','C012','H012','Fiebre Hemorragica');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D013','T013','M004','C013','H013','Diarrea');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D014','T014','M005','C014','H014','Salmonella');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D015','T015','M012','C015','H015','Tuberculosis');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D016','T016','M015','C016','H016','Toxoplasmosis');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D017','T017','M002','C017','H017','Tuberculosis');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D018','T018','M006','C018','H018','Cancer');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D019','T019','M002','C019','H019','Equinococosis');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D020','T020','M003','C020','H020','Fiebre Hemorragica');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D021','T026','M011','C021','H026','Toxoplasmosis');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D022','T028','M004','C022','H028','Tuberculosis');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D023','T030','M007','C023','H030','Cancer');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D024','T031','M001','C024','H031','Equinococosis');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D025','T032','M003','C025','H032','Fiebre Hemorragica');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D026','T001','M011','C026','H001','Toxoplasmosis');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D027','T002','M004','C027','H002','Tuberculosis');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D028','T003','M007','C028','H003','Cancer');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D029','T029','M001','C029','H029','Equinococosis');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D030','T005','M003','C030','H005','Fiebre Hemorragica');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D031','T010','M011','C031','H010','Toxoplasmosis');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D032','T012','M004','C032','H012','Tuberculosis');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D033','T013','M007','C033','H013','Cancer');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D034','T014','M003','C034','H014','Equinococosis');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D035','T015','M011','C035','H015','Toxoplasmosis');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D036','T004','M004','C036','H004','Tuberculosis');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D037','T005','M007','C037','H005','Cancer');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D038','T010','M001','C038','H010','Equinococosis');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D039','T012','M002','C039','H012','Equinococosis');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D040','T001','M011','C040','H001','Cancer');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D041','T027','M004','C041','H027','Tuberculosis');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D042','T009','M007','C042','H009','Cancer');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D043','T017','M001','C043','H017','Equinococosis');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D044','T026','M003','C044','H026','Fiebre Hemorragica');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D045','T004','M011','C045','H004','Toxoplasmosis');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D046','T017','M004','C046','H017','Tuberculosis');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D047','T032','M007','C047','H032','Cancer');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D048','T014','M003','C048','H014','Equinococosis');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D049','T029','M011','C049','H029','Toxoplasmosis');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D050','T013','M004','C050','H013','Tuberculosis');
commit;
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D051','T006','M007','C051','H006','Toxoplasmosis');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D052','T019','M001','C052','H019','Equinococosis');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D053','T017','M002','C053','H017','Tuberculosis');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D054','T020','M001','C054','H020','Equinococosis');
Insert into DIAGNOSTICO (ID_DIAGNOSTICO,ID_MASCOTA,COD_MEDICO,ID_CITA,COD_HISTORIAL,ENFERMEDAD) values ('D055','T005','M002','C055','H005','Hemorragica');
commit;
REM INSERTING into HISTORIAL_MEDICO
SET DEFINE OFF;
Insert into HISTORIAL_MEDICO (COD_HISTORIAL,ID_MASCOTA,DESCRIPCION) values ('H001','T001','El paciente pertence a un Sistema de Salud Privado');
Insert into HISTORIAL_MEDICO (COD_HISTORIAL,ID_MASCOTA,DESCRIPCION) values ('H002','T002','El paciente pertence a un Sistema de Salud Publico');
Insert into HISTORIAL_MEDICO (COD_HISTORIAL,ID_MASCOTA,DESCRIPCION) values ('H003','T003','El paciente pertence tiene Seguro');
Insert into HISTORIAL_MEDICO (COD_HISTORIAL,ID_MASCOTA,DESCRIPCION) values ('H004','T004','El paciente pertence no tiene Seguro');
Insert into HISTORIAL_MEDICO (COD_HISTORIAL,ID_MASCOTA,DESCRIPCION) values ('H005','T005','El paciente pertence a un Sistema de Salud Publico');
Insert into HISTORIAL_MEDICO (COD_HISTORIAL,ID_MASCOTA,DESCRIPCION) values ('H006','T006','El paciente pertence tiene Seguro');
Insert into HISTORIAL_MEDICO (COD_HISTORIAL,ID_MASCOTA,DESCRIPCION) values ('H007','T007','El paciente pertence no tiene Seguro');
Insert into HISTORIAL_MEDICO (COD_HISTORIAL,ID_MASCOTA,DESCRIPCION) values ('H008','T008','El paciente pertence a un Sistema de Salud Privado');
Insert into HISTORIAL_MEDICO (COD_HISTORIAL,ID_MASCOTA,DESCRIPCION) values ('H009','T009','El paciente pertence a un Sistema de Salud Publico');
Insert into HISTORIAL_MEDICO (COD_HISTORIAL,ID_MASCOTA,DESCRIPCION) values ('H010','T010','El paciente tiene seguro');
Insert into HISTORIAL_MEDICO (COD_HISTORIAL,ID_MASCOTA,DESCRIPCION) values ('H011','T011','El paciente tiene Seguro');
Insert into HISTORIAL_MEDICO (COD_HISTORIAL,ID_MASCOTA,DESCRIPCION) values ('H012','T012','El paciente pertence a un Sistema de Salud Publico');
Insert into HISTORIAL_MEDICO (COD_HISTORIAL,ID_MASCOTA,DESCRIPCION) values ('H013','T013','El paciente pertence a un Sistema de Salud Privado');
Insert into HISTORIAL_MEDICO (COD_HISTORIAL,ID_MASCOTA,DESCRIPCION) values ('H014','T014','El paciente tiene Seguro');
Insert into HISTORIAL_MEDICO (COD_HISTORIAL,ID_MASCOTA,DESCRIPCION) values ('H015','T015','El paciente no tiene Seguro');
Insert into HISTORIAL_MEDICO (COD_HISTORIAL,ID_MASCOTA,DESCRIPCION) values ('H016','T016','El paciente pertence a un Sistema de Salud Privado');
Insert into HISTORIAL_MEDICO (COD_HISTORIAL,ID_MASCOTA,DESCRIPCION) values ('H017','T017','El paciente pertence a un Sistema de Salud Privado');
Insert into HISTORIAL_MEDICO (COD_HISTORIAL,ID_MASCOTA,DESCRIPCION) values ('H018','T018','El paciente pertence a un Sistema de Salud Publico');
Insert into HISTORIAL_MEDICO (COD_HISTORIAL,ID_MASCOTA,DESCRIPCION) values ('H019','T019','El paciente no tiene Seguro');
Insert into HISTORIAL_MEDICO (COD_HISTORIAL,ID_MASCOTA,DESCRIPCION) values ('H020','T020','El paciente no tiene Seguro');
Insert into HISTORIAL_MEDICO (COD_HISTORIAL,ID_MASCOTA,DESCRIPCION) values ('H021','T021','El paciente pertence a un Sistema de Salud Publico');
Insert into HISTORIAL_MEDICO (COD_HISTORIAL,ID_MASCOTA,DESCRIPCION) values ('H022','T022','El paciente tiene Seguro');
Insert into HISTORIAL_MEDICO (COD_HISTORIAL,ID_MASCOTA,DESCRIPCION) values ('H023','T023','El paciente pertence a  unSistema de Salud Publico');
Insert into HISTORIAL_MEDICO (COD_HISTORIAL,ID_MASCOTA,DESCRIPCION) values ('H024','T024','El paciente pertence a un Sistema de Salud Privado');
Insert into HISTORIAL_MEDICO (COD_HISTORIAL,ID_MASCOTA,DESCRIPCION) values ('H025','T025','El paciente pertence a un Sistema de Salud Publico');
Insert into HISTORIAL_MEDICO (COD_HISTORIAL,ID_MASCOTA,DESCRIPCION) values ('H026','T026','El paciente pertence a un Sistema de Salud Publico');
Insert into HISTORIAL_MEDICO (COD_HISTORIAL,ID_MASCOTA,DESCRIPCION) values ('H027','T027','El paciente tiene Seguro');
Insert into HISTORIAL_MEDICO (COD_HISTORIAL,ID_MASCOTA,DESCRIPCION) values ('H028','T028','El paciente tiene Seguro');
Insert into HISTORIAL_MEDICO (COD_HISTORIAL,ID_MASCOTA,DESCRIPCION) values ('H029','T029','El paciente pertence a un Sistema de Salud Publico');
Insert into HISTORIAL_MEDICO (COD_HISTORIAL,ID_MASCOTA,DESCRIPCION) values ('H030','T030','El paciente no tiene Seguro');
Insert into HISTORIAL_MEDICO (COD_HISTORIAL,ID_MASCOTA,DESCRIPCION) values ('H031','T031','El paciente pertence a  unSistema de Salud Publico');
Insert into HISTORIAL_MEDICO (COD_HISTORIAL,ID_MASCOTA,DESCRIPCION) values ('H032','T032','El paciente pertence a un Sistema de Salud Privado');
Insert into HISTORIAL_MEDICO (COD_HISTORIAL,ID_MASCOTA,DESCRIPCION) values ('H033','T033','El paciente pertence a un Sistema de Salud Privado');
commit;
REM INSERTING into LABORATORIO
SET DEFINE OFF;
Insert into LABORATORIO (ID_MEDICAMENTO,MEDICAMENTO,CANTIDAD,FECHA_FABRI,FECHA_VEN) values ('L001','Carprofeno',53,to_date('15/02/22','DD/MM/RR'),to_date('30/01/26','DD/MM/RR'));
Insert into LABORATORIO (ID_MEDICAMENTO,MEDICAMENTO,CANTIDAD,FECHA_FABRI,FECHA_VEN) values ('L002','Deracoxib',70,to_date('09/08/20','DD/MM/RR'),to_date('18/07/27','DD/MM/RR'));
Insert into LABORATORIO (ID_MEDICAMENTO,MEDICAMENTO,CANTIDAD,FECHA_FABRI,FECHA_VEN) values ('L003','Etodolaco',61,to_date('27/12/19','DD/MM/RR'),to_date('13/04/24','DD/MM/RR'));
Insert into LABORATORIO (ID_MEDICAMENTO,MEDICAMENTO,CANTIDAD,FECHA_FABRI,FECHA_VEN) values ('L004','Firocoxib',80,to_date('18/11/21','DD/MM/RR'),to_date('07/05/27','DD/MM/RR'));
Insert into LABORATORIO (ID_MEDICAMENTO,MEDICAMENTO,CANTIDAD,FECHA_FABRI,FECHA_VEN) values ('L005','Meloxicam',63,to_date('06/01/22','DD/MM/RR'),to_date('10/11/28','DD/MM/RR'));
Insert into LABORATORIO (ID_MEDICAMENTO,MEDICAMENTO,CANTIDAD,FECHA_FABRI,FECHA_VEN) values ('L006','Bravecto',43,to_date('24/10/21','DD/MM/RR'),to_date('17/02/27','DD/MM/RR'));
Insert into LABORATORIO (ID_MEDICAMENTO,MEDICAMENTO,CANTIDAD,FECHA_FABRI,FECHA_VEN) values ('L007','Nexgard',43,to_date('05/10/16','DD/MM/RR'),to_date('07/02/27','DD/MM/RR'));
Insert into LABORATORIO (ID_MEDICAMENTO,MEDICAMENTO,CANTIDAD,FECHA_FABRI,FECHA_VEN) values ('L008','Fripets',50,to_date('03/10/14','DD/MM/RR'),to_date('17/03/28','DD/MM/RR'));
Insert into LABORATORIO (ID_MEDICAMENTO,MEDICAMENTO,CANTIDAD,FECHA_FABRI,FECHA_VEN) values ('L009','Simparica',60,to_date('01/10/13','DD/MM/RR'),to_date('09/04/29','DD/MM/RR'));
Insert into LABORATORIO (ID_MEDICAMENTO,MEDICAMENTO,CANTIDAD,FECHA_FABRI,FECHA_VEN) values ('L010','PET CAL',70,to_date('02/10/10','DD/MM/RR'),to_date('11/05/30','DD/MM/RR'));
Insert into LABORATORIO (ID_MEDICAMENTO,MEDICAMENTO,CANTIDAD,FECHA_FABRI,FECHA_VEN) values ('L011','Apoquel',20,to_date('08/10/19','DD/MM/RR'),to_date('13/06/24','DD/MM/RR'));
Insert into LABORATORIO (ID_MEDICAMENTO,MEDICAMENTO,CANTIDAD,FECHA_FABRI,FECHA_VEN) values ('L012','Revolution 12%',10,to_date('04/10/21','DD/MM/RR'),to_date('15/08/22','DD/MM/RR'));
Insert into LABORATORIO (ID_MEDICAMENTO,MEDICAMENTO,CANTIDAD,FECHA_FABRI,FECHA_VEN) values ('L013','Ecavel',15,to_date('06/10/12','DD/MM/RR'),to_date('17/07/24','DD/MM/RR'));
Insert into LABORATORIO (ID_MEDICAMENTO,MEDICAMENTO,CANTIDAD,FECHA_FABRI,FECHA_VEN) values ('L014','Ecaderm',30,to_date('08/10/15','DD/MM/RR'),to_date('19/09/26','DD/MM/RR'));
Insert into LABORATORIO (ID_MEDICAMENTO,MEDICAMENTO,CANTIDAD,FECHA_FABRI,FECHA_VEN) values ('L015','Ciprovet',90,to_date('10/10/13','DD/MM/RR'),to_date('21/10/28','DD/MM/RR'));
Insert into LABORATORIO (ID_MEDICAMENTO,MEDICAMENTO,CANTIDAD,FECHA_FABRI,FECHA_VEN) values ('L016','Osteacart Plus',70,to_date('12/10/21','DD/MM/RR'),to_date('23/11/25','DD/MM/RR'));
Insert into LABORATORIO (ID_MEDICAMENTO,MEDICAMENTO,CANTIDAD,FECHA_FABRI,FECHA_VEN) values ('L017','Balsamo',75,to_date('24/10/20','DD/MM/RR'),to_date('25/12/24','DD/MM/RR'));
Insert into LABORATORIO (ID_MEDICAMENTO,MEDICAMENTO,CANTIDAD,FECHA_FABRI,FECHA_VEN) values ('L018','6A spray',27,to_date('14/10/18','DD/MM/RR'),to_date('27/11/26','DD/MM/RR'));
Insert into LABORATORIO (ID_MEDICAMENTO,MEDICAMENTO,CANTIDAD,FECHA_FABRI,FECHA_VEN) values ('L019','Endal Plus',43,to_date('16/10/16','DD/MM/RR'),to_date('29/10/22','DD/MM/RR'));
Insert into LABORATORIO (ID_MEDICAMENTO,MEDICAMENTO,CANTIDAD,FECHA_FABRI,FECHA_VEN) values ('L020','Nature´s',58,to_date('18/10/14','DD/MM/RR'),to_date('30/09/27','DD/MM/RR'));
Insert into LABORATORIO (ID_MEDICAMENTO,MEDICAMENTO,CANTIDAD,FECHA_FABRI,FECHA_VEN) values ('L021','vetriScience Pet',67,to_date('20/10/12','DD/MM/RR'),to_date('02/02/26','DD/MM/RR'));
Insert into LABORATORIO (ID_MEDICAMENTO,MEDICAMENTO,CANTIDAD,FECHA_FABRI,FECHA_VEN) values ('L022','Mirrapel',49,to_date('24/10/19','DD/MM/RR'),to_date('04/08/25','DD/MM/RR'));
Insert into LABORATORIO (ID_MEDICAMENTO,MEDICAMENTO,CANTIDAD,FECHA_FABRI,FECHA_VEN) values ('L023','Allergy',29,to_date('24/10/17','DD/MM/RR'),to_date('24/07/24','DD/MM/RR'));
Insert into LABORATORIO (ID_MEDICAMENTO,MEDICAMENTO,CANTIDAD,FECHA_FABRI,FECHA_VEN) values ('L024','Otiflex C',38,to_date('24/10/15','DD/MM/RR'),to_date('28/06/23','DD/MM/RR'));
Insert into LABORATORIO (ID_MEDICAMENTO,MEDICAMENTO,CANTIDAD,FECHA_FABRI,FECHA_VEN) values ('L025','Trihepat',25,to_date('24/10/13','DD/MM/RR'),to_date('30/04/29','DD/MM/RR'));
Insert into LABORATORIO (ID_MEDICAMENTO,MEDICAMENTO,CANTIDAD,FECHA_FABRI,FECHA_VEN) values ('L026','Labyderm',12,to_date('24/10/11','DD/MM/RR'),to_date('17/03/28','DD/MM/RR'));
commit;
REM INSERTING into MASCOTA
SET DEFINE OFF;
Insert into MASCOTA (ID_MASCOTA,NOMBRE_MAS,TIPO,RAZA,EDAD,DNI) values ('T001','Deva','Perro','Pastor Aleman',8,'77345213');
Insert into MASCOTA (ID_MASCOTA,NOMBRE_MAS,TIPO,RAZA,EDAD,DNI) values ('T002','Ponnyx','Perro','schnauzer',3,'72345623');
Insert into MASCOTA (ID_MASCOTA,NOMBRE_MAS,TIPO,RAZA,EDAD,DNI) values ('T003','Pelusa','Perro','Siberiano',2,'79382394');
Insert into MASCOTA (ID_MASCOTA,NOMBRE_MAS,TIPO,RAZA,EDAD,DNI) values ('T004','Frank','Gato','Bengalí',1,'72354097');
Insert into MASCOTA (ID_MASCOTA,NOMBRE_MAS,TIPO,RAZA,EDAD,DNI) values ('T005','Rog','Perro','Sabueso',5,'71232596');
Insert into MASCOTA (ID_MASCOTA,NOMBRE_MAS,TIPO,RAZA,EDAD,DNI) values ('T006','Tom','Gato','Angora turco',3,'75232554');
Insert into MASCOTA (ID_MASCOTA,NOMBRE_MAS,TIPO,RAZA,EDAD,DNI) values ('T007','Susy','Gato','Maine Coon',2,'74232231');
Insert into MASCOTA (ID_MASCOTA,NOMBRE_MAS,TIPO,RAZA,EDAD,DNI) values ('T008','Orejas','Perro','Terrier',6,'71232123');
Insert into MASCOTA (ID_MASCOTA,NOMBRE_MAS,TIPO,RAZA,EDAD,DNI) values ('T009','Broke','Perro','American Bully',6,'73232599');
Insert into MASCOTA (ID_MASCOTA,NOMBRE_MAS,TIPO,RAZA,EDAD,DNI) values ('T010','Molly ','Perro','Pitbull',8,'71232111');
Insert into MASCOTA (ID_MASCOTA,NOMBRE_MAS,TIPO,RAZA,EDAD,DNI) values ('T011','Tony','Gato','Mestizo ',5,'72232102');
Insert into MASCOTA (ID_MASCOTA,NOMBRE_MAS,TIPO,RAZA,EDAD,DNI) values ('T012','Pecas','Gato','Mestizo',4,'70232203');
Insert into MASCOTA (ID_MASCOTA,NOMBRE_MAS,TIPO,RAZA,EDAD,DNI) values ('T013','Manchas','Perro','Boxer',2,'79212114');
Insert into MASCOTA (ID_MASCOTA,NOMBRE_MAS,TIPO,RAZA,EDAD,DNI) values ('T014','Loco','Perro','Boxer',1,'77232105');
Insert into MASCOTA (ID_MASCOTA,NOMBRE_MAS,TIPO,RAZA,EDAD,DNI) values ('T015','Tito','Perro','Bulldog Frances',3,'77132126');
Insert into MASCOTA (ID_MASCOTA,NOMBRE_MAS,TIPO,RAZA,EDAD,DNI) values ('T016','Manchas','Perro','Pitbull',11,'78732187');
Insert into MASCOTA (ID_MASCOTA,NOMBRE_MAS,TIPO,RAZA,EDAD,DNI) values ('T017','Pecas','Perro','Terrier',6,'72232108');
Insert into MASCOTA (ID_MASCOTA,NOMBRE_MAS,TIPO,RAZA,EDAD,DNI) values ('T018','Alaraco','Gato','Mestizo',2,'75232109');
Insert into MASCOTA (ID_MASCOTA,NOMBRE_MAS,TIPO,RAZA,EDAD,DNI) values ('T019','David','Perro','Bulldog Ingles',1,'77232110');
Insert into MASCOTA (ID_MASCOTA,NOMBRE_MAS,TIPO,RAZA,EDAD,DNI) values ('T020','Braco','Gato','Mestizo',2,'74232111');
Insert into MASCOTA (ID_MASCOTA,NOMBRE_MAS,TIPO,RAZA,EDAD,DNI) values ('T021','Orejas','Perro','Boxer',1,'77232192');
Insert into MASCOTA (ID_MASCOTA,NOMBRE_MAS,TIPO,RAZA,EDAD,DNI) values ('T022','Audito','Perro','Pitbull',4,'71304902');
Insert into MASCOTA (ID_MASCOTA,NOMBRE_MAS,TIPO,RAZA,EDAD,DNI) values ('T023','Oso','Perro','American Bully',1,'79910327');
Insert into MASCOTA (ID_MASCOTA,NOMBRE_MAS,TIPO,RAZA,EDAD,DNI) values ('T024','Coqita','Gato','Mestizo',5,'71002101');
Insert into MASCOTA (ID_MASCOTA,NOMBRE_MAS,TIPO,RAZA,EDAD,DNI) values ('T025','Serpi','Perro','Pastor',2,'74232231');
Insert into MASCOTA (ID_MASCOTA,NOMBRE_MAS,TIPO,RAZA,EDAD,DNI) values ('T026','Drako','Gato','Bengalí',3,'70034445');
Insert into MASCOTA (ID_MASCOTA,NOMBRE_MAS,TIPO,RAZA,EDAD,DNI) values ('T027','Veget','Perro','Terrier',1,'75232554');
Insert into MASCOTA (ID_MASCOTA,NOMBRE_MAS,TIPO,RAZA,EDAD,DNI) values ('T028','Koro','Perro','Pitbull',4,'71102394');
Insert into MASCOTA (ID_MASCOTA,NOMBRE_MAS,TIPO,RAZA,EDAD,DNI) values ('T029','Cocic','Gato','Siberiano',2,'72354097');
Insert into MASCOTA (ID_MASCOTA,NOMBRE_MAS,TIPO,RAZA,EDAD,DNI) values ('T030','Gutty','Gato','Angora',1,'70049567');
Insert into MASCOTA (ID_MASCOTA,NOMBRE_MAS,TIPO,RAZA,EDAD,DNI) values ('T031','tromp','Perro','Boxer',2,'77232119');
Insert into MASCOTA (ID_MASCOTA,NOMBRE_MAS,TIPO,RAZA,EDAD,DNI) values ('T032','koti','Gato','Maine Coon',6,'74232229');
Insert into MASCOTA (ID_MASCOTA,NOMBRE_MAS,TIPO,RAZA,EDAD,DNI) values ('T033','Richord','Gato','Mestizo',3,'77556213');
commit;
REM INSERTING into MEDICO
SET DEFINE OFF;
Insert into MEDICO (COD_MEDICO,NOMBRE_D,APELLIDO_D,CORREO,ESPECIALIDAD,EDAD) values ('M001','Daniel Rigoberto','Lazaro Rocento','DnaiR@gmail.com','Neurología',40);
Insert into MEDICO (COD_MEDICO,NOMBRE_D,APELLIDO_D,CORREO,ESPECIALIDAD,EDAD) values ('M002','Rajon Coro','Toro Villanueva','ToroR@gmail.com','Cardiología',48);
Insert into MEDICO (COD_MEDICO,NOMBRE_D,APELLIDO_D,CORREO,ESPECIALIDAD,EDAD) values ('M003','Del Piero','Alejandrin Ratlin','PieroA@gmail.com','Neurología',40);
Insert into MEDICO (COD_MEDICO,NOMBRE_D,APELLIDO_D,CORREO,ESPECIALIDAD,EDAD) values ('M004','Gael','Flores Rojas','GaelR@gmail.com','Cirugía',40);
Insert into MEDICO (COD_MEDICO,NOMBRE_D,APELLIDO_D,CORREO,ESPECIALIDAD,EDAD) values ('M005','Alarcon Rojas','Moises Fernando','moialargon@gmail.com','Oftalmologia',42);
Insert into MEDICO (COD_MEDICO,NOMBRE_D,APELLIDO_D,CORREO,ESPECIALIDAD,EDAD) values ('M006','Barrera Avellada','Luis Alejandro','luibarrera@gmail.com','Oftalmologia',43);
Insert into MEDICO (COD_MEDICO,NOMBRE_D,APELLIDO_D,CORREO,ESPECIALIDAD,EDAD) values ('M007','Carvajal Sanchez','Bernardo Andres','bercarvajal@gmail.com','Oftalmologia',47);
Insert into MEDICO (COD_MEDICO,NOMBRE_D,APELLIDO_D,CORREO,ESPECIALIDAD,EDAD) values ('M008','Archila Peñalosa ','Emilio Jose','emiarchila@gmail.com','Neurología',43);
Insert into MEDICO (COD_MEDICO,NOMBRE_D,APELLIDO_D,CORREO,ESPECIALIDAD,EDAD) values ('M009','Bernal villegas','Jaime Platino','jaimebernal@gmail.com','Cardiología',38);
Insert into MEDICO (COD_MEDICO,NOMBRE_D,APELLIDO_D,CORREO,ESPECIALIDAD,EDAD) values ('M010','Cubides Moreno','Olga Ximena','olgacubides@gmail.com','Cardiología',35);
Insert into MEDICO (COD_MEDICO,NOMBRE_D,APELLIDO_D,CORREO,ESPECIALIDAD,EDAD) values ('M011','Arias Nieto','Gloria Alessandra','gloriaari@gmail.com','Cirugía',50);
Insert into MEDICO (COD_MEDICO,NOMBRE_D,APELLIDO_D,CORREO,ESPECIALIDAD,EDAD) values ('M012','Borrero Cabrera','Claudia katerine','clauborrero@gmail.com','Cirugía',49);
Insert into MEDICO (COD_MEDICO,NOMBRE_D,APELLIDO_D,CORREO,ESPECIALIDAD,EDAD) values ('M013','Artunduaga Salas','Ivan Rodrigo','Ir02@gmail.com','Oncologia ',52);
Insert into MEDICO (COD_MEDICO,NOMBRE_D,APELLIDO_D,CORREO,ESPECIALIDAD,EDAD) values ('M014','Buitrago Ruiz','Angela María','Angel180@gmail.com','Cardiología',47);
Insert into MEDICO (COD_MEDICO,NOMBRE_D,APELLIDO_D,CORREO,ESPECIALIDAD,EDAD) values ('M015',' Koteich Khatib ','Jorge Eliécer','Je00@gmail.com','NeurologíA',38);
commit;
REM INSERTING into RECEPCION
SET DEFINE OFF;
Insert into RECEPCION (ID_RECEPCIONISTA,NOMBRE_REC,APELLIDO_REC,EDAD_REC) values ('R001','Cecilia','Quispe Centurio',25);
Insert into RECEPCION (ID_RECEPCIONISTA,NOMBRE_REC,APELLIDO_REC,EDAD_REC) values ('R002','Jota Xavi','Gutierres Villa',29);
Insert into RECEPCION (ID_RECEPCIONISTA,NOMBRE_REC,APELLIDO_REC,EDAD_REC) values ('R003','Celeste Roa','Valdivia Vela',32);
Insert into RECEPCION (ID_RECEPCIONISTA,NOMBRE_REC,APELLIDO_REC,EDAD_REC) values ('R004','Cielo','De la Cruz',21);
Insert into RECEPCION (ID_RECEPCIONISTA,NOMBRE_REC,APELLIDO_REC,EDAD_REC) values ('R005','Karla Sofia','Velarde Valverde',19);
Insert into RECEPCION (ID_RECEPCIONISTA,NOMBRE_REC,APELLIDO_REC,EDAD_REC) values ('R006','Celeste Roa','Valdivia Vela',32);
Insert into RECEPCION (ID_RECEPCIONISTA,NOMBRE_REC,APELLIDO_REC,EDAD_REC) values ('R007','Maria','Angels Tejo',25);
Insert into RECEPCION (ID_RECEPCIONISTA,NOMBRE_REC,APELLIDO_REC,EDAD_REC) values ('R008','Estefania ','Chico Kiko',39);
Insert into RECEPCION (ID_RECEPCIONISTA,NOMBRE_REC,APELLIDO_REC,EDAD_REC) values ('R009','Violeta','Pallares Milan',18);
Insert into RECEPCION (ID_RECEPCIONISTA,NOMBRE_REC,APELLIDO_REC,EDAD_REC) values ('R010','Naima','Prat Brit',32);
commit;
REM INSERTING into RECETA
SET DEFINE OFF;
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E001','L001','D001',to_date('17/02/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E002','L005','D002',to_date('17/02/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E003','L002','D003',to_date('17/02/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E004','L003','D004',to_date('18/02/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E005','L008','D005',to_date('18/02/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E006','L009','D006',to_date('19/02/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E007','L012','D007',to_date('19/02/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E008','L001','D008',to_date('21/02/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E009','L015','D009',to_date('24/02/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E010','L022','D010',to_date('28/02/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E011','L011','D011',to_date('02/03/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E012','L025','D012',to_date('08/03/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E013','L026','D013',to_date('10/03/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E014','L003','D014',to_date('11/03/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E015','L007','D015',to_date('18/03/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E016','L009','D016',to_date('20/03/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E017','L003','D017',to_date('21/04/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E018','L021','D018',to_date('23/04/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E019','L019','D019',to_date('29/04/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E020','L013','D020',to_date('04/05/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E021','L001','D021',to_date('08/05/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E022','L001','D022',to_date('09/05/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E023','L001','D023',to_date('12/05/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E024','L001','D024',to_date('15/05/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E025','L001','D025',to_date('22/05/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E026','L006','D026',to_date('17/05/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E027','L003','D027',to_date('18/05/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E028','L007','D028',to_date('18/05/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E029','L009','D029',to_date('19/05/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E030','L012','D030',to_date('21/05/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E031','L016','D031',to_date('22/05/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E032','L003','D032',to_date('23/05/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E033','L007','D033',to_date('24/05/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E034','L009','D034',to_date('25/05/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E035','L007','D035',to_date('25/05/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E036','L008','D036',to_date('26/05/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E037','L017','D037',to_date('27/05/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E038','L012','D038',to_date('27/05/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E039','L015','D039',to_date('28/05/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E040','L006','D040',to_date('28/05/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E041','L003','D041',to_date('29/05/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E042','L007','D042',to_date('29/05/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E043','L009','D043',to_date('29/05/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E044','L012','D044',to_date('30/05/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E045','L016','D045',to_date('30/05/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E046','L003','D046',to_date('30/05/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E047','L007','D047',to_date('31/05/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E048','L009','D048',to_date('31/05/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E049','L007','D049',to_date('31/05/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E050','L008','D050',to_date('01/06/22','DD/MM/RR'));
commit;
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E051','L017','D051',to_date('01/06/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E052','L012','D052',to_date('02/06/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E053','L015','D053',to_date('02/06/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E054','L012','D054',to_date('03/06/22','DD/MM/RR'));
Insert into RECETA (ID_RECETA,ID_MEDICAMENTO,ID_DIAGNOSTICO,FECHA_HOY) values ('E055','L015','D055',to_date('03/06/22','DD/MM/RR'));
commit;
REM INSERTING into RECIBO
SET DEFINE OFF;
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B001','E001','77345213',95,to_date('17/02/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B002','E002','72345623',112,to_date('17/02/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B003','E003','79382394',60,to_date('17/02/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B004','E004','72354097',80,to_date('18/02/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B005','E005','71232596',102,to_date('18/02/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B006','E006','75232554',95,to_date('19/02/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B007','E007','74232231',140,to_date('19/02/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B008','E008','71232123',55,to_date('21/02/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B009','E009','73232599',233,to_date('24/02/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B010','E010','71232111',51,to_date('28/02/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B011','E011','72232102',74,to_date('02/03/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B012','E012','70232203',34,to_date('08/03/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B013','E013','79212114',210,to_date('10/03/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B014','E014','77232105',101,to_date('11/03/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B015','E015','77132126',111,to_date('18/03/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B016','E016','78732187',45,to_date('20/03/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B017','E017','72232108',99,to_date('21/04/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B018','E018','75232109',78,to_date('23/04/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B019','E019','77232110',201,to_date('29/04/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B020','E020','74232111',93,to_date('04/05/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B021','E021','70034445',45,to_date('08/05/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B022','E022','71102394',99,to_date('09/05/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B023','E023','70049567',78,to_date('12/05/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B024','E024','77232119',201,to_date('15/05/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B025','E025','74232229',93,to_date('22/05/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B026','E026','77345213',45,to_date('17/05/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B027','E027','72345623',99,to_date('18/05/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B028','E028','79382394',78,to_date('18/05/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B029','E029','72354097',201,to_date('19/05/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B030','E030','71232596',93,to_date('21/05/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B031','E031','71232111',45,to_date('22/05/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B032','E032','70232203',99,to_date('23/05/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B033','E033','79212114',78,to_date('24/05/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B034','E034','77232105',201,to_date('25/05/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B035','E035','77132126',93,to_date('25/05/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B036','E036','72354097',93,to_date('26/05/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B037','E037','71232596',201,to_date('27/05/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B038','E038','71232111',93,to_date('27/05/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B039','E039','70232203',93,to_date('28/05/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B040','E040','77345213',78,to_date('28/05/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B041','E041','75232554',201,to_date('29/05/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B042','E042','73232599',93,to_date('29/05/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B043','E043','72232108',45,to_date('29/05/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B044','E044','70034445',99,to_date('30/05/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B045','E045','72354097',78,to_date('30/05/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B046','E046','72232108',201,to_date('30/05/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B047','E047','74232229',93,to_date('31/05/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B048','E048','77232105',45,to_date('31/05/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B049','E049','72354097',99,to_date('31/05/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B050','E050','79212114',78,to_date('01/06/22','DD/MM/RR'));
commit;
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B051','E051','75232554',201,to_date('01/06/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B052','E052','77232110',93,to_date('02/06/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B053','E053','72232108',93,to_date('02/06/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B054','E054','74232111',201,to_date('03/06/22','DD/MM/RR'));
Insert into RECIBO (ID_RECIBO,ID_RECETA,DNI,MONTO,FECHA_HOY) values ('B055','E055','71232596',93,to_date('03/06/22','DD/MM/RR'));
commit;
REM INSERTING into TOP5
SET DEFINE OFF;
Insert into TOP5 (DNII,NOMBRE,CANTIDAD) values ('77345213','Gustavo Alonso Salazar Guerrero',1);
Insert into TOP5 (DNII,NOMBRE,CANTIDAD) values ('72345623','Aldair Gonzales Rigor',0);
Insert into TOP5 (DNII,NOMBRE,CANTIDAD) values ('79382394','Jean Pier Villareal Bayer',0);
Insert into TOP5 (DNII,NOMBRE,CANTIDAD) values ('72354097','Stven Leo Messi Orga',3);
Insert into TOP5 (DNII,NOMBRE,CANTIDAD) values ('71232596','Julian Renzo Rojo Maradona',2);
Insert into TOP5 (DNII,NOMBRE,CANTIDAD) values ('75232554','Cristian Hernandez Hernandez',1);
Insert into TOP5 (DNII,NOMBRE,CANTIDAD) values ('74232231','Briney Rojas samudio',0);
Insert into TOP5 (DNII,NOMBRE,CANTIDAD) values ('71232123','Julian Renzo Mardo Modck',0);
Insert into TOP5 (DNII,NOMBRE,CANTIDAD) values ('73232599','Brayan Vilca Neira',1);
Insert into TOP5 (DNII,NOMBRE,CANTIDAD) values ('71232111','Pasco kuku Chino Salcedo',2);
Insert into TOP5 (DNII,NOMBRE,CANTIDAD) values ('72232102','Luis troto Gordillo tall',0);
Insert into TOP5 (DNII,NOMBRE,CANTIDAD) values ('70232203','Pepe lopop Bokking Hanmma',2);
Insert into TOP5 (DNII,NOMBRE,CANTIDAD) values ('79212114','Jorge Susano Taipe Tapia',2);
Insert into TOP5 (DNII,NOMBRE,CANTIDAD) values ('77232105','Carlos Sasuke Lopez Ariaga',2);
Insert into TOP5 (DNII,NOMBRE,CANTIDAD) values ('77132126','Fernando turu De Kim',1);
Insert into TOP5 (DNII,NOMBRE,CANTIDAD) values ('78732187','Claudia zapot Ramirez Vertegal',0);
Insert into TOP5 (DNII,NOMBRE,CANTIDAD) values ('72232108','Claudio Soso Quispe Admido',2);
Insert into TOP5 (DNII,NOMBRE,CANTIDAD) values ('75232109','Cristiano Sius Rojoi Hahoo',0);
Insert into TOP5 (DNII,NOMBRE,CANTIDAD) values ('77232110','Pablo Pepe Escobar Garcia',0);
Insert into TOP5 (DNII,NOMBRE,CANTIDAD) values ('74232111','Carolina Norte Milkarino Altamirano',0);
Insert into TOP5 (DNII,NOMBRE,CANTIDAD) values ('77232192','Carla Kia Vela Vorgez',0);
Insert into TOP5 (DNII,NOMBRE,CANTIDAD) values ('71304902','Naruto Benzema Tokio',0);
Insert into TOP5 (DNII,NOMBRE,CANTIDAD) values ('79910327','Ferrari Toyota Beginner Saming',0);
Insert into TOP5 (DNII,NOMBRE,CANTIDAD) values ('71002101','Ocfa Octo De la Sum',0);
Insert into TOP5 (DNII,NOMBRE,CANTIDAD) values ('70034445','Joel Maldini Nelly Gil',1);
Insert into TOP5 (DNII,NOMBRE,CANTIDAD) values ('71102394','Rodolfo Fufu Raito Raki',0);
Insert into TOP5 (DNII,NOMBRE,CANTIDAD) values ('70049567','Pepex Guerrero Sapallanay',0);
Insert into TOP5 (DNII,NOMBRE,CANTIDAD) values ('77232119','Yaciel Aliz Ximena Xixo',0);
Insert into TOP5 (DNII,NOMBRE,CANTIDAD) values ('74232229','Clarence Rick Sakura Ino',2);
Insert into TOP5 (DNII,NOMBRE,CANTIDAD) values ('77556213','Kiameru Gerber Zapata',0);
commit;
--------------------------------------------------------
--  DDL for Trigger ELIMI_CITA
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "ELIMI_CITA" 
before delete on Cita FOR each row
begin
        insert into auditoria values (:old.ID_CITA,:old.DNI_CLI,:old.ID_RECEPCIONISTA,:old.FECHA_AT);
        DBMS_OUTPUT.PUT_LINE('Esta eliminando una Cita, todo esta siendo registrado por un Trigger');
end;
/
ALTER TRIGGER "ELIMI_CITA" ENABLE;
--------------------------------------------------------
--  DDL for Procedure CONTEO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "CONTEO" (Dias in number)
is
Cursor c1 is
select DNI, NOMBRE_CLI ||' '|| APELLIDO_CLI Nombre from Cliente;
dni char(8);
nom varchar2(60);
valor number;
begin
valor := 0;
    if not c1%isopen then
        open c1;
    end if;
    loop 
    fetch C1 into dni, nom;
    exit when C1%notfound;
    select count(*) into valor from Cita where FECHA_AT<sysdate 
    and (sysdate-Dias)<FECHA_AT 
    and DNI_CLI = dni;
    insert into Top5 values(dni,nom,valor);
    valor := 0;
    end loop;
    close c1;
end;

/
--------------------------------------------------------
--  DDL for Procedure INSERTAR_CITA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "INSERTAR_CITA" (ci in char, cli in char, re in char, mon in number, fh in date)
is 
e_rror exception;
val number;
begin
    val := validar(cli,re,fh);
      if val = 0 then
        insert into Cita values(ci,cli,re,mon,fh);
         DBMS_OUTPUT.PUT_LINE('Se inserto Correctamente en la Tabla Cita.');
    else
       raise e_rror;
    end if;
EXCEPTION
WHEN e_rror THEN 
    DBMS_OUTPUT.PUT_LINE('El dato de la Cita que usted quiere ingresar ya existe.');
WHEN OTHERS THEN 
    DBMS_OUTPUT.PUT_LINE('Al parecer ingreso el ID_CITA repetido, ingrese otro por favor.');
end;

/
--------------------------------------------------------
--  DDL for Procedure PRODUCTOS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "PRODUCTOS" 
is
Cursor c3 is 
Select Medicamento, Cantidad, Fecha_Fabri, Fecha_Ven from laboratorio;
med varchar2(50);
can number;
fecha_V date;
fecha_F date;
begin
    if not c3%isopen then
        open c3;
    end if;
    loop 
    fetch C3 into med,can,fecha_V,fecha_F;
    exit when C3%notfound;
    DBMS_OUTPUT.PUT_LINE('El medicamento '||med||' tiene en stock '||can||' en total, y su Fecha de Fabricacion es '||fecha_F||' y de Vencimiento es '||fecha_V);
    end loop;
    close c3;
end;

/
--------------------------------------------------------
--  DDL for Procedure SP_ACTUALIZA_CLIENTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SP_ACTUALIZA_CLIENTE" (DNI_cli in char, NOMBRE in varchar2, APELLIDO in varchar2, DIRECCION_cli in varchar2, N_TELEFONICO_cli char)
is
e_rror exception;
validar number;
begin
    validar:=fn_valida_cli(DNI_cli);
    if validar = 0 then
        raise e_rror;
    else
    UPDATE Cliente set 
    NOMBRE_CLI = NOMBRE,
    APELLIDO_CLI = APELLIDO,
    DIRECCION = DIRECCION_cli,
    N_TELEFONICO = N_TELEFONICO_cli
    where DNI = DNI_cli;
        DBMS_OUTPUT.PUT_LINE('Se Actualizo correctamente');
    end if;
EXCEPTION
WHEN e_rror THEN 
    DBMS_OUTPUT.PUT_LINE('El dato del Cliente que usted quiere actualizar no existe.');
WHEN OTHERS THEN 
    DBMS_OUTPUT.PUT_LINE('Al parecer usted ingreso mal el DNI del cliente, por favor intentelo de nuevo.');
end;

/
--------------------------------------------------------
--  DDL for Procedure SP_ACTUALIZA_HIST
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SP_ACTUALIZA_HIST" (cod_hist in char, id_masc in char, Descripcion_hist in varchar2)
is
e_rror exception;
validar number;
begin
    validar:=fn_valida_hist(cod_hist);
    if validar = 0 then
        raise e_rror;
    else
    UPDATE HISTORIAL_MEDICO set 
    DESCRIPCION = Descripcion_hist
    where COD_HISTORIAL = cod_hist;
        DBMS_OUTPUT.PUT_LINE('Se Actualizo correctamente');
    end if;
EXCEPTION
WHEN e_rror THEN 
    DBMS_OUTPUT.PUT_LINE('El dato del Historial Medico que usted quiere actualizar no existe.');
WHEN OTHERS THEN 
    DBMS_OUTPUT.PUT_LINE('Al parecer usted ingreso mal el codigo del Historial Medico, por favor intentelo de nuevo.');
end;

/
--------------------------------------------------------
--  DDL for Procedure SP_ACTUALIZA_LAB
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SP_ACTUALIZA_LAB" (id_lab in char, nom_medicamento in varchar2, cantidad_medicamento in number, fecha_f in date, fecha_v in date)
is
e_rror exception;
validar number;
begin
    validar:=fn_valida_lab(id_lab);
    if validar = 0 then
        raise e_rror;
    else
    UPDATE LABORATORIO set 
    MEDICAMENTO = nom_medicamento,
    CANTIDAD = cantidad_medicamento,
    FECHA_FABRI = fecha_f,
    FECHA_VEN= fecha_v
    where ID_MEDICAMENTO = id_lab;
        DBMS_OUTPUT.PUT_LINE('Se Actualizo correctamente');
    end if;
EXCEPTION
WHEN e_rror THEN 
    DBMS_OUTPUT.PUT_LINE('El dato del medicamento que usted quiere actualizar no existe.');
WHEN OTHERS THEN 
    DBMS_OUTPUT.PUT_LINE('Al parecer usted ingreso mal el id del medicamento, por favor intentelo de nuevo.');
end;

/
--------------------------------------------------------
--  DDL for Procedure SP_ACTUALIZA_MASC
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SP_ACTUALIZA_MASC" (id_masc in char, nom_masc in varchar2, raza_masc in varchar2, edad_masc in number, dni_cli in char)
is
e_rror exception;
validar number;
begin
    validar:=fn_valida_masc(id_masc);
    if validar = 0 then
        raise e_rror;
    else
    UPDATE MASCOTA set 
    NOMBRE_MAS = nom_masc,
    RAZA = raza_masc,
    EDAD = edad_masc
    where ID_MASCOTA = id_masc;
        DBMS_OUTPUT.PUT_LINE('Se Actualizo correctamente');
    end if;
EXCEPTION
WHEN e_rror THEN 
    DBMS_OUTPUT.PUT_LINE('El dato de la Mascota que usted quiere actualizar no existe.');
WHEN OTHERS THEN 
    DBMS_OUTPUT.PUT_LINE('Al parecer usted ingreso mal el id de la mascota, por favor intentelo de nuevo.');
end;

/
--------------------------------------------------------
--  DDL for Procedure SP_ACTUALIZA_MED
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SP_ACTUALIZA_MED" (cod_med in char, NOMBRE_med in varchar2, APELLIDO_med in varchar2, correo_med in varchar2, especialidad_med in varchar2, edad_med in number)
is
e_rror exception;
menor exception;
validar number;
begin
    validar:=fn_valida_med(cod_med);
    if edad_med <18 then
        raise menor;
    else
    if validar = 0 then
        raise e_rror;
    else
    UPDATE MEDICO set 
    NOMBRE_D = NOMBRE_med,
    APELLIDO_D = APELLIDO_med,
    CORREO = correo_med,
    ESPECIALIDAD=especialidad_med,
    EDAD = edad_med
    where COD_MEDICO = cod_med;
        DBMS_OUTPUT.PUT_LINE('Se Actualizo correctamente');
    end if;
    end if;
EXCEPTION
WHEN e_rror THEN 
    DBMS_OUTPUT.PUT_LINE('El dato (del/de la) Doctor/Doctora que usted quiere actualizar no existe.');
WHEN menor THEN 
    DBMS_OUTPUT.PUT_LINE('La edad (del/de la) Doctor/Doctora no es la indicada para el trabajo.');
WHEN OTHERS THEN 
    DBMS_OUTPUT.PUT_LINE('Al parecer usted ingreso mal el codigo (del/de la) Doctor/Doctora, por favor intentelo de nuevo.');
end;

/
--------------------------------------------------------
--  DDL for Procedure SP_ACTUALIZA_REC
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SP_ACTUALIZA_REC" (id_re in char, NOMBRE_re in varchar2, APELLIDO_re in varchar2, edad_re in number)
is
e_rror exception;
menor exception;
validar number;
begin
    validar:=fn_valida_rec(id_re);
    if edad_re <18 then
        raise menor;
    else
    if validar = 0 then
        raise e_rror;
    else
    UPDATE RECEPCION set 
    NOMBRE_REC = NOMBRE_re,
    APELLIDO_REC = APELLIDO_re,
    EDAD_REC = edad_re
    where ID_RECEPCIONISTA = id_re;
        DBMS_OUTPUT.PUT_LINE('Se Actualizo correctamente');
    end if;
    end if;
EXCEPTION
WHEN e_rror THEN 
    DBMS_OUTPUT.PUT_LINE('El dato (del/de la) Recepcionista que usted quiere actualizar ya existe.');
WHEN menor THEN 
    DBMS_OUTPUT.PUT_LINE('La edad (del/de la) Recepcionista no es la indicada para el trabajo.');
WHEN OTHERS THEN 
    DBMS_OUTPUT.PUT_LINE('Al parecer usted ingreso mal el id (del/de la) Recepcionista, por favor intentelo de nuevo.');
end;

/
--------------------------------------------------------
--  DDL for Procedure SP_ELIMINA_CLIENTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SP_ELIMINA_CLIENTE" (DNI_c in char)
is
e_rror exception;
validar number;
begin
    validar:=fn_valida_cli(DNI_c);
    if validar = 0 then
        raise e_rror;
    else
        delete from Cliente e where e.DNI = DNI_c;
        DBMS_OUTPUT.PUT_LINE('Se elimino Correctamente');
    end if;
EXCEPTION
WHEN e_rror THEN 
    DBMS_OUTPUT.PUT_LINE('El dato del Cliente que usted quiere eliminar no existe.');
WHEN OTHERS THEN 
    DBMS_OUTPUT.PUT_LINE('Al parecer el DNI del cliente ya esta relacionado con otra tabla.');
end;

/
--------------------------------------------------------
--  DDL for Procedure SP_ELIMINA_HIST
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SP_ELIMINA_HIST" (cod_hist in char)
is
e_rror exception;
validar number;
begin
    validar:=fn_valida_hist(cod_hist);
    if validar = 0 then
        raise e_rror;
    else
        delete from HISTORIAL_MEDICO e where e.COD_HISTORIAL = cod_hist;
        DBMS_OUTPUT.PUT_LINE('Se elimino Correctamente');
    end if;
EXCEPTION
WHEN e_rror THEN 
    DBMS_OUTPUT.PUT_LINE('El dato del Historial Medico que usted quiere eliminar no existe.');
WHEN OTHERS THEN 
    DBMS_OUTPUT.PUT_LINE('Al parecer el codigo del Historial Medico esta relacionado con otra tabla.');
end;

/
--------------------------------------------------------
--  DDL for Procedure SP_ELIMINA_LAB
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SP_ELIMINA_LAB" (id_lab in char)
is
e_rror exception;
validar number;
begin
    validar:=fn_valida_lab(id_lab);
    if validar = 0 then
        raise e_rror;
    else
        delete from LABORATORIO e where e.ID_MEDICAMENTO = id_lab;
        DBMS_OUTPUT.PUT_LINE('Se elimino Correctamente');
    end if;
EXCEPTION
WHEN e_rror THEN 
    DBMS_OUTPUT.PUT_LINE('El dato del medicamento que usted quiere eliminar no existe.');
WHEN OTHERS THEN 
    DBMS_OUTPUT.PUT_LINE('Al parecer el codigo del medicamento esta relacionado con otra tabla.');
end;

/
--------------------------------------------------------
--  DDL for Procedure SP_ELIMINA_MASC
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SP_ELIMINA_MASC" (id_masc in char)
is
e_rror exception;
validar number;
begin
    validar:=fn_valida_masc(id_masc);
    if validar = 0 then
        raise e_rror;
    else
        delete from MASCOTA e where e.ID_MASCOTA = id_masc;
        DBMS_OUTPUT.PUT_LINE('Se elimino Correctamente');
    end if;
EXCEPTION
WHEN e_rror THEN 
    DBMS_OUTPUT.PUT_LINE('El dato de la Mascota que usted quiere eliminar no existe.');
WHEN OTHERS THEN 
    DBMS_OUTPUT.PUT_LINE('Al parecer el codigo de la Mascota esta relacionado con otra tabla.');
end;

/
--------------------------------------------------------
--  DDL for Procedure SP_ELIMINA_MED
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SP_ELIMINA_MED" (cod_med in char)
is
e_rror exception;
validar number;
begin
    validar:=fn_valida_med(cod_med);
    if validar = 0 then
        raise e_rror;
    else
        delete from MEDICO e where e.COD_MEDICO = cod_med;
        DBMS_OUTPUT.PUT_LINE('Se elimino Correctamente');
    end if;
EXCEPTION
WHEN e_rror THEN 
    DBMS_OUTPUT.PUT_LINE('El dato (del/de la) Doctor/Doctora que usted quiere eliminar no existe.');
WHEN OTHERS THEN 
    DBMS_OUTPUT.PUT_LINE('Al parecer el codigo (del/de la) Doctor/Doctora esta relacionado con otra tabla.');
end;

/
--------------------------------------------------------
--  DDL for Procedure SP_ELIMINA_REC
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SP_ELIMINA_REC" (id_re in char)
is
e_rror exception;
validar number;
begin
    validar:=fn_valida_rec(id_re);
    if validar = 0 then
        raise e_rror;
    else
        delete from RECEPCION e where e.ID_RECEPCIONISTA = id_re;
        DBMS_OUTPUT.PUT_LINE('Se elimino Correctamente');
    end if;
EXCEPTION
WHEN e_rror THEN 
    DBMS_OUTPUT.PUT_LINE('El dato (del/de la) Recepcionista que usted quiere eliminar no existe.');
WHEN OTHERS THEN 
    DBMS_OUTPUT.PUT_LINE('Al parecer el id (del/de la) Recepcionista ya esta relacionado con otra tabla.');
end;

/
--------------------------------------------------------
--  DDL for Procedure SP_INSERTA_CLIENTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SP_INSERTA_CLIENTE" (DNI in char, NOMBRE_CLI in varchar2, APELLIDO_CLI in varchar2, DIRECCION in varchar2, N_TELEFONICO char)
is
e_rror exception;
validar number;
begin
    validar:=fn_valida_cli(DNI);
    if validar = 0 then
        insert into Cliente values(DNI,NOMBRE_CLI,APELLIDO_CLI,DIRECCION,N_TELEFONICO);
         DBMS_OUTPUT.PUT_LINE('Se inserto Correctamente.');
    else
       raise e_rror;
    end if;
EXCEPTION
WHEN e_rror THEN 
    DBMS_OUTPUT.PUT_LINE('El dato del Cliente que usted quiere ingresar ya existe.');
WHEN OTHERS THEN 
    DBMS_OUTPUT.PUT_LINE('Al parecer usted ingreso mal el DNI del cliente, por favor intentelo de nuevo.');
end;

/
--------------------------------------------------------
--  DDL for Procedure SP_INSERTA_HIST
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SP_INSERTA_HIST" (cod_hist in char, id_masc in char, Descripcion in varchar2)
is
e_rror exception;
validar number;
begin
    validar:=fn_valida_hist(cod_hist);
    if validar = 0 then
        insert into HISTORIAL_MEDICO values(cod_hist,id_masc,Descripcion);
         DBMS_OUTPUT.PUT_LINE('Se inserto Correctamente.');
    else
       raise e_rror;
    end if;
EXCEPTION
WHEN e_rror THEN 
    DBMS_OUTPUT.PUT_LINE('El dato del Historial Medico que usted quiere ingresar ya existe.');
WHEN OTHERS THEN 
    DBMS_OUTPUT.PUT_LINE('Al parecer usted ingreso mal el codigo del Historial Medico, por favor intentelo de nuevo.');
end;

/
--------------------------------------------------------
--  DDL for Procedure SP_INSERTA_LAB
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SP_INSERTA_LAB" (id_lab in char, nom_medicamento in varchar2, cantidad_medicamento in number, fecha_f in date, fecha_v in date)
is
e_rror exception;
validar number;
begin
    validar:=fn_valida_lab(id_lab);
    if validar = 0 then
        insert into LABORATORIO values(id_lab,nom_medicamento,cantidad_medicamento,fecha_f,fecha_v);
         DBMS_OUTPUT.PUT_LINE('Se inserto Correctamente.');
    else
       raise e_rror;
    end if;
EXCEPTION
WHEN e_rror THEN 
    DBMS_OUTPUT.PUT_LINE('El dato del medicamento que usted quiere ingresar ya existe.');
WHEN OTHERS THEN 
    DBMS_OUTPUT.PUT_LINE('Al parecer usted ingreso mal el id del medicamento, por favor intentelo de nuevo.');
end;

/
--------------------------------------------------------
--  DDL for Procedure SP_INSERTA_MASC
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SP_INSERTA_MASC" (id_masc in char, nom_masc in varchar2, tip in varchar2, raza_masc in varchar2, edad_masc in number, dni_cli in char)
is
e_rror exception;
validar number;
begin
    validar:=fn_valida_masc(id_masc);
    if validar = 0 then
        insert into MASCOTA values(id_masc,nom_masc,tip,raza_masc,edad_masc,dni_cli);
         DBMS_OUTPUT.PUT_LINE('Se inserto Correctamente.');
    else
       raise e_rror;
    end if;
EXCEPTION
WHEN e_rror THEN 
    DBMS_OUTPUT.PUT_LINE('El dato de la Mascota que usted quiere ingresar ya existe.');
WHEN OTHERS THEN 
    DBMS_OUTPUT.PUT_LINE('Al parecer usted ingreso mal el id de la Mascota, por favor intentelo de nuevo.');
end;

/
--------------------------------------------------------
--  DDL for Procedure SP_INSERTA_MED
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SP_INSERTA_MED" (cod_med in char, NOMBRE_med in varchar2, APELLIDO_med in varchar2, correo_med in varchar2, especialidad_med in varchar2, edad_med in number)
is
e_rror exception;
menor exception;
validar number;
begin
    validar:=fn_valida_med(cod_med);
    if edad_med <22 then
        raise menor;
    else
    if validar = 0 then
        insert into MEDICO values(cod_med,NOMBRE_med,APELLIDO_med,correo_med,especialidad_med,edad_med);
         DBMS_OUTPUT.PUT_LINE('Se inserto Correctamente.');
    else
       raise e_rror;
    end if;
    end if;
EXCEPTION
WHEN e_rror THEN 
    DBMS_OUTPUT.PUT_LINE('El dato (del/de la) Doctor/Doctora que usted quiere ingresar ya existe.');
WHEN menor THEN 
    DBMS_OUTPUT.PUT_LINE('La edad (del/de la) Doctor/Doctora no es la indicada para el trabajo.');
WHEN OTHERS THEN 
    DBMS_OUTPUT.PUT_LINE('Al parecer usted ingreso mal el codigo (del/de la) Doctor/Doctora, por favor intentelo de nuevo.');
end;

/
--------------------------------------------------------
--  DDL for Procedure SP_INSERTA_REC
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SP_INSERTA_REC" (id_re in char, NOMBRE_re in varchar2, APELLIDO_re in varchar2, edad_re in number)
is
e_rror exception;
menor exception;
validar number;
begin
    validar:=fn_valida_rec(id_re);
    if edad_re <18 then
        raise menor;
    else
    if validar = 0 then
        insert into RECEPCION values(id_re,NOMBRE_re,APELLIDO_re,edad_re);
         DBMS_OUTPUT.PUT_LINE('Se inserto Correctamente.');
    else
       raise e_rror;
    end if;
    end if;
EXCEPTION
WHEN e_rror THEN 
    DBMS_OUTPUT.PUT_LINE('El dato (del/de la) Recepcionista que usted quiere ingresar ya existe.');
WHEN menor THEN 
    DBMS_OUTPUT.PUT_LINE('La edad (del/de la) Recepcionista no es la indicada para el trabajo.');
WHEN OTHERS THEN 
    DBMS_OUTPUT.PUT_LINE('Al parecer usted ingreso mal el id (del/de la) Recepcionista, por favor intentelo de nuevo.');
end;

/
--------------------------------------------------------
--  DDL for Procedure TOP_TRANSACCIONAL
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "TOP_TRANSACCIONAL" (top in number)
is
Cursor c2 is
select nombre, cantidad from Top5 order by cantidad DESC;
Nm varchar2(60);
can number;
valor number;
begin
valor:=1;

if not c2%isopen then
        open c2;
    end if;
    loop 
    fetch C2 into Nm,can;
    exit when C2%notfound;
    if valor <= top then
    DBMS_OUTPUT.PUT_LINE('El Top '||valor||' es: '||NM||' con '||can||' operaciones transaccionales');
    valor:=valor + 1;
    end if;
    end loop;
    close c2;
end;

/
--------------------------------------------------------
--  DDL for Package PK_PROYECTO
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "PK_PROYECTO" 
is
 /*Primero se vera todas las Funciones para validar el Mantenimiento de las tablas Maestras que en total son 6*/
 function fn_valida_cli(validando in char)return number;
 function fn_valida_hist(validando in char)return number;
 function fn_valida_lab(validando in char)return number;
 function fn_valida_masc(validando in char)return number;
 function fn_valida_med(validando in char)return number;
 function fn_valida_rec(validando in char)return number;
 /*Hay una Funcion mas que sirve para el Problema 3 de la t3 que es el insertar en la tabla cita los datos, esta Funcion sirve para validar que no
 se repita */
 Function Validar(cli in char, re in char, fh in date)return number;
 /*Aqui vemos los procedimientos que sirven para el Mantenimiento de las tablas Maestras*/
 --Actualizar:
 procedure sp_actualiza_Cliente(DNI_cli in char, NOMBRE in varchar2, APELLIDO in varchar2, DIRECCION_cli in varchar2, N_TELEFONICO_cli char);
 procedure sp_actualiza_hist(cod_hist in char, id_masc in char, Descripcion_hist in varchar2);
 procedure sp_actualiza_lab(id_lab in char, nom_medicamento in varchar2, cantidad_medicamento in number, fecha_f in date, fecha_v in date);
 procedure sp_actualiza_masc(id_masc in char, nom_masc in varchar2, raza_masc in varchar2, edad_masc in number, dni_cli in char);
 procedure sp_actualiza_med(cod_med in char, NOMBRE_med in varchar2, APELLIDO_med in varchar2, correo_med in varchar2, especialidad_med in varchar2, edad_med in number);
 procedure sp_actualiza_rec(id_re in char, NOMBRE_re in varchar2, APELLIDO_re in varchar2, edad_re in number);
 --Eliminar:
 procedure sp_elimina_Cliente(DNI_c in char);
 procedure sp_elimina_hist(cod_hist in char);
 procedure sp_elimina_lab(id_lab in char);
 procedure sp_elimina_masc(id_masc in char);
 procedure sp_elimina_med(cod_med in char);
 procedure sp_elimina_rec(id_re in char);
 --Insertar:
 procedure sp_inserta_Cliente(DNI in char, NOMBRE_CLI in varchar2, APELLIDO_CLI in varchar2, DIRECCION in varchar2, N_TELEFONICO char);
 procedure sp_inserta_hist(cod_hist in char, id_masc in char, Descripcion in varchar2);
 procedure sp_inserta_lab(id_lab in char, nom_medicamento in varchar2, cantidad_medicamento in number, fecha_f in date, fecha_v in date);
 procedure sp_inserta_masc(id_masc in char, nom_masc in varchar2, tip in varchar2, raza_masc in varchar2, edad_masc in number, dni_cli in char);
 procedure sp_inserta_med(cod_med in char, NOMBRE_med in varchar2, APELLIDO_med in varchar2, correo_med in varchar2, especialidad_med in varchar2, edad_med in number);
 procedure sp_inserta_rec(id_re in char, NOMBRE_re in varchar2, APELLIDO_re in varchar2, edad_re in number);

 /*Despues viene los Procedimientos para el TOP 5 de una tabla Transaccional y para la tabla Productos*/
 procedure Conteo(Dias in number);
 procedure Top_Transaccional(top in number);

 /*Y por ultimo viene los Procedimientos de la pregunta 3 de la t3, insertar en la tabal Cita y mostrar la tabla producto con un cursor*/
 procedure Insertar_Cita(ci in char, cli in char, re in char, mon in number, fh in date);
 procedure Productos;
end;

/
--------------------------------------------------------
--  DDL for Package Body PK_PROYECTO
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "PK_PROYECTO" 
is
 /*Primero se vera todas las Funciones para validar el Mantenimiento de las tablas Maestras que en total son 6*/
    function fn_valida_cli(validando in char)return number
    is
    vFinal number;
    begin

        select count(*) into vFinal
        from Cliente e 
        where e.DNI = validando;

        if vFinal > 0 then
            return 1;
        else
            return 0;
        end if;
    end;

    function fn_valida_hist(validando in char)return number
    is
    vFinal number;
    begin

        select count(*) into vFinal
        from HISTORIAL_MEDICO e 
        where e.COD_HISTORIAL = validando;

        if vFinal > 0 then
            return 1;
        else
            return 0;
        end if;
    end;

    function fn_valida_lab(validando in char)return number
    is
    vFinal number;
    begin

        select count(*) into vFinal
        from LABORATORIO e 
        where e.ID_MEDICAMENTO = validando;

        if vFinal > 0 then
            return 1;
        else
            return 0;
        end if;
    end;

    function fn_valida_masc(validando in char)return number
    is
    vFinal number;
    begin

        select count(*) into vFinal
        from MASCOTA e 
        where e.ID_MASCOTA = validando;

        if vFinal > 0 then
            return 1;
        else
            return 0;
        end if;
    end;

    function fn_valida_med(validando in char)return number
    is
    vFinal number;
    begin

        select count(*) into vFinal
        from MEDICO e 
        where e.COD_MEDICO = validando;

        if vFinal > 0 then
            return 1;
        else
            return 0;
        end if;
    end;

    function fn_valida_rec(validando in char)return number
    is
    vFinal number;
    begin

        select count(*) into vFinal
        from RECEPCION e 
        where e.ID_RECEPCIONISTA = validando;

        if vFinal > 0 then
            return 1;
        else
            return 0;
        end if;
    end;

     /*Hay una Funcion mas que sirve para el Problema 3 de la t3 que es el insertar en la tabla cita los datos, esta Funcion sirve para validar que no
 se repita */
    Function Validar(cli in char, re in char, fh in date)return number
    is
    Valor number;
    begin
        select count(*) into Valor from Cita where DNI_CLI = cli and ID_RECEPCIONISTA = re and 
        FECHA_AT = fh;

       if Valor > 0 then
            return 1;
        else
            return 0;
        end if;
    end;
 /*Aqui vemos los procedimientos que sirven para el Mantenimiento de las tablas Maestras*/
 --Actualizar:
    procedure sp_actualiza_Cliente(DNI_cli in char, NOMBRE in varchar2, APELLIDO in varchar2, DIRECCION_cli in varchar2, N_TELEFONICO_cli char)
    is
    e_rror exception;
    validar number;
    begin
        validar:=fn_valida_cli(DNI_cli);
        if validar = 0 then
            raise e_rror;
        else
        UPDATE Cliente set 
        NOMBRE_CLI = NOMBRE,
        APELLIDO_CLI = APELLIDO,
        DIRECCION = DIRECCION_cli,
        N_TELEFONICO = N_TELEFONICO_cli
        where DNI = DNI_cli;
            DBMS_OUTPUT.PUT_LINE('Se Actualizo correctamente');
        end if;
    EXCEPTION
    WHEN e_rror THEN 
        DBMS_OUTPUT.PUT_LINE('El dato del Cliente que usted quiere actualizar no existe.');
    WHEN OTHERS THEN 
        DBMS_OUTPUT.PUT_LINE('Al parecer usted ingreso mal el DNI del cliente, por favor intentelo de nuevo.');
    end; 

    procedure sp_actualiza_hist(cod_hist in char, id_masc in char, Descripcion_hist in varchar2)
    is
    e_rror exception;
    validar number;
    begin
        validar:=fn_valida_hist(cod_hist);
        if validar = 0 then
            raise e_rror;
        else
        UPDATE HISTORIAL_MEDICO set 
        DESCRIPCION = Descripcion_hist
        where COD_HISTORIAL = cod_hist;
            DBMS_OUTPUT.PUT_LINE('Se Actualizo correctamente');
        end if;
    EXCEPTION
    WHEN e_rror THEN 
        DBMS_OUTPUT.PUT_LINE('El dato del Historial Medico que usted quiere actualizar no existe.');
    WHEN OTHERS THEN 
        DBMS_OUTPUT.PUT_LINE('Al parecer usted ingreso mal el codigo del Historial Medico, por favor intentelo de nuevo.');
    end;

    procedure sp_actualiza_lab(id_lab in char, nom_medicamento in varchar2, cantidad_medicamento in number, fecha_f in date, fecha_v in date)
    is
    e_rror exception;
    validar number;
    begin
        validar:=fn_valida_lab(id_lab);
        if validar = 0 then
            raise e_rror;
        else
        UPDATE LABORATORIO set 
        MEDICAMENTO = nom_medicamento,
        CANTIDAD = cantidad_medicamento,
        FECHA_FABRI = fecha_f,
        FECHA_VEN= fecha_v
        where ID_MEDICAMENTO = id_lab;
            DBMS_OUTPUT.PUT_LINE('Se Actualizo correctamente');
        end if;
    EXCEPTION
    WHEN e_rror THEN 
        DBMS_OUTPUT.PUT_LINE('El dato del medicamento que usted quiere actualizar no existe.');
    WHEN OTHERS THEN 
        DBMS_OUTPUT.PUT_LINE('Al parecer usted ingreso mal el id del medicamento, por favor intentelo de nuevo.');
    end;

    procedure sp_actualiza_masc(id_masc in char, nom_masc in varchar2, raza_masc in varchar2, edad_masc in number, dni_cli in char)
    is
    e_rror exception;
    validar number;
    begin
        validar:=fn_valida_masc(id_masc);
        if validar = 0 then
            raise e_rror;
        else
        UPDATE MASCOTA set 
        NOMBRE_MAS = nom_masc,
        RAZA = raza_masc,
        EDAD = edad_masc
        where ID_MASCOTA = id_masc;
            DBMS_OUTPUT.PUT_LINE('Se Actualizo correctamente');
        end if;
    EXCEPTION
    WHEN e_rror THEN 
        DBMS_OUTPUT.PUT_LINE('El dato de la Mascota que usted quiere actualizar no existe.');
    WHEN OTHERS THEN 
        DBMS_OUTPUT.PUT_LINE('Al parecer usted ingreso mal el id de la mascota, por favor intentelo de nuevo.');
    end;

    procedure sp_actualiza_med(cod_med in char, NOMBRE_med in varchar2, APELLIDO_med in varchar2, correo_med in varchar2, especialidad_med in varchar2, edad_med in number)
    is
    e_rror exception;
    menor exception;
    validar number;
    begin
        validar:=fn_valida_med(cod_med);
        if edad_med <18 then
            raise menor;
        else
        if validar = 0 then
            raise e_rror;
        else
        UPDATE MEDICO set 
        NOMBRE_D = NOMBRE_med,
        APELLIDO_D = APELLIDO_med,
        CORREO = correo_med,
        ESPECIALIDAD=especialidad_med,
        EDAD = edad_med
        where COD_MEDICO = cod_med;
            DBMS_OUTPUT.PUT_LINE('Se Actualizo correctamente');
        end if;
        end if;
    EXCEPTION
    WHEN e_rror THEN 
        DBMS_OUTPUT.PUT_LINE('El dato (del/de la) Doctor/Doctora que usted quiere actualizar no existe.');
    WHEN menor THEN 
        DBMS_OUTPUT.PUT_LINE('La edad (del/de la) Doctor/Doctora no es la indicada para el trabajo.');
    WHEN OTHERS THEN 
        DBMS_OUTPUT.PUT_LINE('Al parecer usted ingreso mal el codigo (del/de la) Doctor/Doctora, por favor intentelo de nuevo.');
    end;

    procedure sp_actualiza_rec(id_re in char, NOMBRE_re in varchar2, APELLIDO_re in varchar2, edad_re in number)
    is
    e_rror exception;
    menor exception;
    validar number;
    begin
        validar:=fn_valida_rec(id_re);
        if edad_re <18 then
            raise menor;
        else
        if validar = 0 then
            raise e_rror;
        else
        UPDATE RECEPCION set 
        NOMBRE_REC = NOMBRE_re,
        APELLIDO_REC = APELLIDO_re,
        EDAD_REC = edad_re
        where ID_RECEPCIONISTA = id_re;
            DBMS_OUTPUT.PUT_LINE('Se Actualizo correctamente');
        end if;
        end if;
    EXCEPTION
    WHEN e_rror THEN 
        DBMS_OUTPUT.PUT_LINE('El dato (del/de la) Recepcionista que usted quiere actualizar ya existe.');
    WHEN menor THEN 
        DBMS_OUTPUT.PUT_LINE('La edad (del/de la) Recepcionista no es la indicada para el trabajo.');
    WHEN OTHERS THEN 
        DBMS_OUTPUT.PUT_LINE('Al parecer usted ingreso mal el id (del/de la) Recepcionista, por favor intentelo de nuevo.');
    end;
--Eliminar:
    procedure sp_elimina_Cliente(DNI_c in char)
    is
    e_rror exception;
    validar number;
    begin
        validar:=fn_valida_cli(DNI_c);
        if validar = 0 then
            raise e_rror;
        else
            delete from Cliente e where e.DNI = DNI_c;
            DBMS_OUTPUT.PUT_LINE('Se elimino Correctamente');
        end if;
    EXCEPTION
    WHEN e_rror THEN 
        DBMS_OUTPUT.PUT_LINE('El dato del Cliente que usted quiere eliminar no existe.');
    WHEN OTHERS THEN 
        DBMS_OUTPUT.PUT_LINE('Al parecer el DNI del cliente ya esta relacionado con otra tabla.');
    end;

    procedure sp_elimina_hist(cod_hist in char)
    is
    e_rror exception;
    validar number;
    begin
        validar:=fn_valida_hist(cod_hist);
        if validar = 0 then
            raise e_rror;
        else
            delete from HISTORIAL_MEDICO e where e.COD_HISTORIAL = cod_hist;
            DBMS_OUTPUT.PUT_LINE('Se elimino Correctamente');
        end if;
    EXCEPTION
    WHEN e_rror THEN 
        DBMS_OUTPUT.PUT_LINE('El dato del Historial Medico que usted quiere eliminar no existe.');
    WHEN OTHERS THEN 
        DBMS_OUTPUT.PUT_LINE('Al parecer el codigo del Historial Medico esta relacionado con otra tabla.');
    end;

    procedure sp_elimina_lab(id_lab in char)
    is
    e_rror exception;
    validar number;
    begin
        validar:=fn_valida_lab(id_lab);
        if validar = 0 then
            raise e_rror;
        else
            delete from LABORATORIO e where e.ID_MEDICAMENTO = id_lab;
            DBMS_OUTPUT.PUT_LINE('Se elimino Correctamente');
        end if;
    EXCEPTION
    WHEN e_rror THEN 
        DBMS_OUTPUT.PUT_LINE('El dato del medicamento que usted quiere eliminar no existe.');
    WHEN OTHERS THEN 
        DBMS_OUTPUT.PUT_LINE('Al parecer el codigo del medicamento esta relacionado con otra tabla.');
    end;

    procedure sp_elimina_masc(id_masc in char)
    is
    e_rror exception;
    validar number;
    begin
        validar:=fn_valida_masc(id_masc);
        if validar = 0 then
            raise e_rror;
        else
            delete from MASCOTA e where e.ID_MASCOTA = id_masc;
            DBMS_OUTPUT.PUT_LINE('Se elimino Correctamente');
        end if;
    EXCEPTION
    WHEN e_rror THEN 
        DBMS_OUTPUT.PUT_LINE('El dato de la Mascota que usted quiere eliminar no existe.');
    WHEN OTHERS THEN 
        DBMS_OUTPUT.PUT_LINE('Al parecer el codigo de la Mascota esta relacionado con otra tabla.');
    end;

    procedure sp_elimina_med(cod_med in char)
    is
    e_rror exception;
    validar number;
    begin
        validar:=fn_valida_med(cod_med);
        if validar = 0 then
            raise e_rror;
        else
            delete from MEDICO e where e.COD_MEDICO = cod_med;
            DBMS_OUTPUT.PUT_LINE('Se elimino Correctamente');
        end if;
    EXCEPTION
    WHEN e_rror THEN 
        DBMS_OUTPUT.PUT_LINE('El dato (del/de la) Doctor/Doctora que usted quiere eliminar no existe.');
    WHEN OTHERS THEN 
        DBMS_OUTPUT.PUT_LINE('Al parecer el codigo (del/de la) Doctor/Doctora esta relacionado con otra tabla.');
    end;

    procedure sp_elimina_rec(id_re in char)
    is
    e_rror exception;
    validar number;
    begin
        validar:=fn_valida_rec(id_re);
        if validar = 0 then
            raise e_rror;
        else
            delete from RECEPCION e where e.ID_RECEPCIONISTA = id_re;
            DBMS_OUTPUT.PUT_LINE('Se elimino Correctamente');
        end if;
    EXCEPTION
    WHEN e_rror THEN 
        DBMS_OUTPUT.PUT_LINE('El dato (del/de la) Recepcionista que usted quiere eliminar no existe.');
    WHEN OTHERS THEN 
        DBMS_OUTPUT.PUT_LINE('Al parecer el id (del/de la) Recepcionista ya esta relacionado con otra tabla.');
    end;
--Insertar:
    procedure sp_inserta_Cliente(DNI in char, NOMBRE_CLI in varchar2, APELLIDO_CLI in varchar2, DIRECCION in varchar2, N_TELEFONICO char)
    is
    e_rror exception;
    validar number;
    begin
        validar:=fn_valida_cli(DNI);
        if validar = 0 then
            insert into Cliente values(DNI,NOMBRE_CLI,APELLIDO_CLI,DIRECCION,N_TELEFONICO);
             DBMS_OUTPUT.PUT_LINE('Se inserto Correctamente.');
        else
           raise e_rror;
        end if;
    EXCEPTION
    WHEN e_rror THEN 
        DBMS_OUTPUT.PUT_LINE('El dato del Cliente que usted quiere ingresar ya existe.');
    WHEN OTHERS THEN 
        DBMS_OUTPUT.PUT_LINE('Al parecer usted ingreso mal el DNI del cliente, por favor intentelo de nuevo.');
    end;

    procedure sp_inserta_hist(cod_hist in char, id_masc in char, Descripcion in varchar2)
    is
    e_rror exception;
    validar number;
    begin
        validar:=fn_valida_hist(cod_hist);
        if validar = 0 then
            insert into HISTORIAL_MEDICO values(cod_hist,id_masc,Descripcion);
             DBMS_OUTPUT.PUT_LINE('Se inserto Correctamente.');
        else
           raise e_rror;
        end if;
    EXCEPTION
    WHEN e_rror THEN 
        DBMS_OUTPUT.PUT_LINE('El dato del Historial Medico que usted quiere ingresar ya existe.');
    WHEN OTHERS THEN 
        DBMS_OUTPUT.PUT_LINE('Al parecer usted ingreso mal el codigo del Historial Medico, por favor intentelo de nuevo.');
    end;

    procedure sp_inserta_lab(id_lab in char, nom_medicamento in varchar2, cantidad_medicamento in number, fecha_f in date, fecha_v in date)
    is
    e_rror exception;
    validar number;
    begin
        validar:=fn_valida_lab(id_lab);
        if validar = 0 then
            insert into LABORATORIO values(id_lab,nom_medicamento,cantidad_medicamento,fecha_f,fecha_v);
             DBMS_OUTPUT.PUT_LINE('Se inserto Correctamente.');
        else
           raise e_rror;
        end if;
    EXCEPTION
    WHEN e_rror THEN 
        DBMS_OUTPUT.PUT_LINE('El dato del medicamento que usted quiere ingresar ya existe.');
    WHEN OTHERS THEN 
        DBMS_OUTPUT.PUT_LINE('Al parecer usted ingreso mal el id del medicamento, por favor intentelo de nuevo.');
    end;

    procedure sp_inserta_masc(id_masc in char, nom_masc in varchar2, tip in varchar2, raza_masc in varchar2, edad_masc in number, dni_cli in char)
    is
    e_rror exception;
    validar number;
    begin
        validar:=fn_valida_masc(id_masc);
        if validar = 0 then
            insert into MASCOTA values(id_masc,nom_masc,tip,raza_masc,edad_masc,dni_cli);
             DBMS_OUTPUT.PUT_LINE('Se inserto Correctamente.');
        else
           raise e_rror;
        end if;
    EXCEPTION
    WHEN e_rror THEN 
        DBMS_OUTPUT.PUT_LINE('El dato de la Mascota que usted quiere ingresar ya existe.');
    WHEN OTHERS THEN 
        DBMS_OUTPUT.PUT_LINE('Al parecer usted ingreso mal el id de la Mascota, por favor intentelo de nuevo.');
    end;

    procedure sp_inserta_med(cod_med in char, NOMBRE_med in varchar2, APELLIDO_med in varchar2, correo_med in varchar2, especialidad_med in varchar2, edad_med in number)
    is
    e_rror exception;
    menor exception;
    validar number;
    begin
        validar:=fn_valida_med(cod_med);
        if edad_med <22 then
            raise menor;
        else
        if validar = 0 then
            insert into MEDICO values(cod_med,NOMBRE_med,APELLIDO_med,correo_med,especialidad_med,edad_med);
             DBMS_OUTPUT.PUT_LINE('Se inserto Correctamente.');
        else
           raise e_rror;
        end if;
        end if;
    EXCEPTION
    WHEN e_rror THEN 
        DBMS_OUTPUT.PUT_LINE('El dato (del/de la) Doctor/Doctora que usted quiere ingresar ya existe.');
    WHEN menor THEN 
        DBMS_OUTPUT.PUT_LINE('La edad (del/de la) Doctor/Doctora no es la indicada para el trabajo.');
    WHEN OTHERS THEN 
        DBMS_OUTPUT.PUT_LINE('Al parecer usted ingreso mal el codigo (del/de la) Doctor/Doctora, por favor intentelo de nuevo.');
    end;

    procedure sp_inserta_rec(id_re in char, NOMBRE_re in varchar2, APELLIDO_re in varchar2, edad_re in number)
    is
    e_rror exception;
    menor exception;
    validar number;
    begin
        validar:=fn_valida_rec(id_re);
        if edad_re <18 then
            raise menor;
        else
        if validar = 0 then
            insert into RECEPCION values(id_re,NOMBRE_re,APELLIDO_re,edad_re);
             DBMS_OUTPUT.PUT_LINE('Se inserto Correctamente.');
        else
           raise e_rror;
        end if;
        end if;
    EXCEPTION
    WHEN e_rror THEN 
        DBMS_OUTPUT.PUT_LINE('El dato (del/de la) Recepcionista que usted quiere ingresar ya existe.');
    WHEN menor THEN 
        DBMS_OUTPUT.PUT_LINE('La edad (del/de la) Recepcionista no es la indicada para el trabajo.');
    WHEN OTHERS THEN 
        DBMS_OUTPUT.PUT_LINE('Al parecer usted ingreso mal el id (del/de la) Recepcionista, por favor intentelo de nuevo.');
    end;

 /*Despues viene los Procedimientos para el TOP 5 de una tabla Transaccional y para la tabla Productos*/
    procedure Conteo(Dias in number)
    is
    Cursor c1 is
    select DNI, NOMBRE_CLI ||' '|| APELLIDO_CLI Nombre from Cliente;
    dni char(8);
    nom varchar2(60);
    valor number;
    begin
    valor := 0;
        if not c1%isopen then
            open c1;
        end if;
        loop 
        fetch C1 into dni, nom;
        exit when C1%notfound;
        select count(*) into valor from Cita where FECHA_AT<sysdate 
        and (sysdate-Dias)<FECHA_AT 
        and DNI_CLI = dni;
        insert into Top5 values(dni,nom,valor);
        valor := 0;
        end loop;
        close c1;
    end;

    procedure Top_Transaccional(top in number)
    is
    Cursor c2 is
    select nombre, cantidad from Top5 order by cantidad DESC;
    Nm varchar2(60);
    can number;
    valor number;
    begin
    valor:=1;

    if not c2%isopen then
            open c2;
        end if;
        loop 
        fetch C2 into Nm,can;
        exit when C2%notfound;
        if valor <= top then
        DBMS_OUTPUT.PUT_LINE('El Top '||valor||' es: '||NM||' con '||can||' operaciones transaccionales');
        valor:=valor + 1;
        end if;
        end loop;
        close c2;
    end;

 /*Y por ultimo viene los Procedimientos de la pregunta 3 de la t3, insertar en la tabal Cita y mostrar la tabla producto con un cursor*/
    procedure Insertar_Cita(ci in char, cli in char, re in char, mon in number, fh in date)
    is 
    e_rror exception;
    val number;
    begin
        val := validar(cli,re,fh);
          if val = 0 then
            insert into Cita values(ci,cli,re,mon,fh);
             DBMS_OUTPUT.PUT_LINE('Se inserto Correctamente en la Tabla Cita.');
        else
           raise e_rror;
        end if;
    EXCEPTION
    WHEN e_rror THEN 
        DBMS_OUTPUT.PUT_LINE('El dato de la Cita que usted quiere ingresar ya existe.');
    WHEN OTHERS THEN 
        DBMS_OUTPUT.PUT_LINE('Al parecer ingreso el ID_CITA repetido, ingrese otro por favor.');
    end;

    procedure Productos
    is
    Cursor c3 is 
    Select Medicamento, Cantidad, Fecha_Fabri, Fecha_Ven from laboratorio;
    med varchar2(50);
    can number;
    fecha_V date;
    fecha_F date;
    begin
        if not c3%isopen then
            open c3;
        end if;
        loop 
        fetch C3 into med,can,fecha_V,fecha_F;
        exit when C3%notfound;
        DBMS_OUTPUT.PUT_LINE('El medicamento '||med||' tiene en stock '||can||' en total, y su Fecha de Fabricacion es '||fecha_F||' y de Vencimiento es '||fecha_V);
        end loop;
        close c3;
    end;
end;

/
--------------------------------------------------------
--  DDL for Function FN_VALIDA_CLI
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FN_VALIDA_CLI" (validando in char)return number
is
vFinal number;
begin

    select count(*) into vFinal
    from Cliente e 
    where e.DNI = validando;

    if vFinal > 0 then
        return 1;
    else
        return 0;
    end if;
end;

/
--------------------------------------------------------
--  DDL for Function FN_VALIDA_HIST
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FN_VALIDA_HIST" (validando in char)return number
is
vFinal number;
begin

    select count(*) into vFinal
    from HISTORIAL_MEDICO e 
    where e.COD_HISTORIAL = validando;

    if vFinal > 0 then
        return 1;
    else
        return 0;
    end if;
end;

/
--------------------------------------------------------
--  DDL for Function FN_VALIDA_LAB
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FN_VALIDA_LAB" (validando in char)return number
is
vFinal number;
begin

    select count(*) into vFinal
    from LABORATORIO e 
    where e.ID_MEDICAMENTO = validando;

    if vFinal > 0 then
        return 1;
    else
        return 0;
    end if;
end;

/
--------------------------------------------------------
--  DDL for Function FN_VALIDA_MASC
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FN_VALIDA_MASC" (validando in char)return number
is
vFinal number;
begin

    select count(*) into vFinal
    from MASCOTA e 
    where e.ID_MASCOTA = validando;

    if vFinal > 0 then
        return 1;
    else
        return 0;
    end if;
end;

/
--------------------------------------------------------
--  DDL for Function FN_VALIDA_MED
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FN_VALIDA_MED" (validando in char)return number
is
vFinal number;
begin

    select count(*) into vFinal
    from MEDICO e 
    where e.COD_MEDICO = validando;

    if vFinal > 0 then
        return 1;
    else
        return 0;
    end if;
end;

/
--------------------------------------------------------
--  DDL for Function FN_VALIDA_REC
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FN_VALIDA_REC" (validando in char)return number
is
vFinal number;
begin

    select count(*) into vFinal
    from RECEPCION e 
    where e.ID_RECEPCIONISTA = validando;

    if vFinal > 0 then
        return 1;
    else
        return 0;
    end if;
end;

/
--------------------------------------------------------
--  DDL for Function VALIDAR
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "VALIDAR" (cli in char, re in char, fh in date)return number
is
Valor number;
begin
    select count(*) into Valor from Cita where DNI_CLI = cli and ID_RECEPCIONISTA = re and 
    FECHA_AT = fh;

   if Valor > 0 then
        return 1;
    else
        return 0;
    end if;
end;

/
--------------------------------------------------------
--  Constraints for Table MEDICO
--------------------------------------------------------

  ALTER TABLE "MEDICO" MODIFY ("COD_MEDICO" NOT NULL ENABLE);
  ALTER TABLE "MEDICO" MODIFY ("NOMBRE_D" NOT NULL ENABLE);
  ALTER TABLE "MEDICO" MODIFY ("APELLIDO_D" NOT NULL ENABLE);
  ALTER TABLE "MEDICO" MODIFY ("CORREO" NOT NULL ENABLE);
  ALTER TABLE "MEDICO" MODIFY ("ESPECIALIDAD" NOT NULL ENABLE);
  ALTER TABLE "MEDICO" MODIFY ("EDAD" NOT NULL ENABLE);
  ALTER TABLE "MEDICO" ADD PRIMARY KEY ("COD_MEDICO")
  USING INDEX  ENABLE;
--------------------------------------------------------
--  Constraints for Table MASCOTA
--------------------------------------------------------

  ALTER TABLE "MASCOTA" MODIFY ("ID_MASCOTA" NOT NULL ENABLE);
  ALTER TABLE "MASCOTA" MODIFY ("NOMBRE_MAS" NOT NULL ENABLE);
  ALTER TABLE "MASCOTA" MODIFY ("TIPO" NOT NULL ENABLE);
  ALTER TABLE "MASCOTA" MODIFY ("RAZA" NOT NULL ENABLE);
  ALTER TABLE "MASCOTA" MODIFY ("EDAD" NOT NULL ENABLE);
  ALTER TABLE "MASCOTA" MODIFY ("DNI" NOT NULL ENABLE);
  ALTER TABLE "MASCOTA" ADD PRIMARY KEY ("ID_MASCOTA")
  USING INDEX  ENABLE;
--------------------------------------------------------
--  Constraints for Table LABORATORIO
--------------------------------------------------------

  ALTER TABLE "LABORATORIO" MODIFY ("ID_MEDICAMENTO" NOT NULL ENABLE);
  ALTER TABLE "LABORATORIO" MODIFY ("MEDICAMENTO" NOT NULL ENABLE);
  ALTER TABLE "LABORATORIO" MODIFY ("CANTIDAD" NOT NULL ENABLE);
  ALTER TABLE "LABORATORIO" MODIFY ("FECHA_FABRI" NOT NULL ENABLE);
  ALTER TABLE "LABORATORIO" MODIFY ("FECHA_VEN" NOT NULL ENABLE);
  ALTER TABLE "LABORATORIO" ADD PRIMARY KEY ("ID_MEDICAMENTO")
  USING INDEX  ENABLE;
--------------------------------------------------------
--  Constraints for Table CLIENTE
--------------------------------------------------------

  ALTER TABLE "CLIENTE" MODIFY ("DNI" NOT NULL ENABLE);
  ALTER TABLE "CLIENTE" MODIFY ("NOMBRE_CLI" NOT NULL ENABLE);
  ALTER TABLE "CLIENTE" MODIFY ("APELLIDO_CLI" NOT NULL ENABLE);
  ALTER TABLE "CLIENTE" MODIFY ("DIRECCION" NOT NULL ENABLE);
  ALTER TABLE "CLIENTE" ADD PRIMARY KEY ("DNI")
  USING INDEX  ENABLE;
--------------------------------------------------------
--  Constraints for Table DIAGNOSTICO
--------------------------------------------------------

  ALTER TABLE "DIAGNOSTICO" MODIFY ("ID_DIAGNOSTICO" NOT NULL ENABLE);
  ALTER TABLE "DIAGNOSTICO" MODIFY ("ID_MASCOTA" NOT NULL ENABLE);
  ALTER TABLE "DIAGNOSTICO" MODIFY ("COD_MEDICO" NOT NULL ENABLE);
  ALTER TABLE "DIAGNOSTICO" MODIFY ("ID_CITA" NOT NULL ENABLE);
  ALTER TABLE "DIAGNOSTICO" MODIFY ("COD_HISTORIAL" NOT NULL ENABLE);
  ALTER TABLE "DIAGNOSTICO" MODIFY ("ENFERMEDAD" NOT NULL ENABLE);
  ALTER TABLE "DIAGNOSTICO" ADD PRIMARY KEY ("ID_DIAGNOSTICO")
  USING INDEX  ENABLE;
  ALTER TABLE "DIAGNOSTICO" ADD UNIQUE ("ID_CITA")
  USING INDEX  ENABLE;
--------------------------------------------------------
--  Constraints for Table RECETA
--------------------------------------------------------

  ALTER TABLE "RECETA" MODIFY ("ID_RECETA" NOT NULL ENABLE);
  ALTER TABLE "RECETA" MODIFY ("ID_MEDICAMENTO" NOT NULL ENABLE);
  ALTER TABLE "RECETA" MODIFY ("ID_DIAGNOSTICO" NOT NULL ENABLE);
  ALTER TABLE "RECETA" MODIFY ("FECHA_HOY" NOT NULL ENABLE);
  ALTER TABLE "RECETA" ADD PRIMARY KEY ("ID_RECETA")
  USING INDEX  ENABLE;
  ALTER TABLE "RECETA" ADD UNIQUE ("ID_DIAGNOSTICO")
  USING INDEX  ENABLE;
--------------------------------------------------------
--  Constraints for Table HISTORIAL_MEDICO
--------------------------------------------------------

  ALTER TABLE "HISTORIAL_MEDICO" MODIFY ("COD_HISTORIAL" NOT NULL ENABLE);
  ALTER TABLE "HISTORIAL_MEDICO" MODIFY ("ID_MASCOTA" NOT NULL ENABLE);
  ALTER TABLE "HISTORIAL_MEDICO" MODIFY ("DESCRIPCION" NOT NULL ENABLE);
  ALTER TABLE "HISTORIAL_MEDICO" ADD PRIMARY KEY ("COD_HISTORIAL")
  USING INDEX  ENABLE;
  ALTER TABLE "HISTORIAL_MEDICO" ADD UNIQUE ("ID_MASCOTA")
  USING INDEX  ENABLE;
--------------------------------------------------------
--  Constraints for Table CITA
--------------------------------------------------------

  ALTER TABLE "CITA" MODIFY ("ID_CITA" NOT NULL ENABLE);
  ALTER TABLE "CITA" MODIFY ("DNI_CLI" NOT NULL ENABLE);
  ALTER TABLE "CITA" MODIFY ("ID_RECEPCIONISTA" NOT NULL ENABLE);
  ALTER TABLE "CITA" MODIFY ("MONTO" NOT NULL ENABLE);
  ALTER TABLE "CITA" MODIFY ("FECHA_AT" NOT NULL ENABLE);
  ALTER TABLE "CITA" ADD PRIMARY KEY ("ID_CITA")
  USING INDEX  ENABLE;
--------------------------------------------------------
--  Constraints for Table RECIBO
--------------------------------------------------------

  ALTER TABLE "RECIBO" MODIFY ("ID_RECIBO" NOT NULL ENABLE);
  ALTER TABLE "RECIBO" MODIFY ("ID_RECETA" NOT NULL ENABLE);
  ALTER TABLE "RECIBO" MODIFY ("DNI" NOT NULL ENABLE);
  ALTER TABLE "RECIBO" MODIFY ("MONTO" NOT NULL ENABLE);
  ALTER TABLE "RECIBO" MODIFY ("FECHA_HOY" NOT NULL ENABLE);
  ALTER TABLE "RECIBO" ADD PRIMARY KEY ("ID_RECIBO")
  USING INDEX  ENABLE;
  ALTER TABLE "RECIBO" ADD UNIQUE ("ID_RECETA")
  USING INDEX  ENABLE;
--------------------------------------------------------
--  Constraints for Table RECEPCION
--------------------------------------------------------

  ALTER TABLE "RECEPCION" MODIFY ("ID_RECEPCIONISTA" NOT NULL ENABLE);
  ALTER TABLE "RECEPCION" MODIFY ("NOMBRE_REC" NOT NULL ENABLE);
  ALTER TABLE "RECEPCION" MODIFY ("APELLIDO_REC" NOT NULL ENABLE);
  ALTER TABLE "RECEPCION" MODIFY ("EDAD_REC" NOT NULL ENABLE);
  ALTER TABLE "RECEPCION" ADD PRIMARY KEY ("ID_RECEPCIONISTA")
  USING INDEX  ENABLE;
--------------------------------------------------------
--  Constraints for Table TOP5
--------------------------------------------------------

  ALTER TABLE "TOP5" ADD UNIQUE ("DNII")
  USING INDEX  ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CITA
--------------------------------------------------------

  ALTER TABLE "CITA" ADD FOREIGN KEY ("DNI_CLI")
	  REFERENCES "CLIENTE" ("DNI") ENABLE;
  ALTER TABLE "CITA" ADD FOREIGN KEY ("ID_RECEPCIONISTA")
	  REFERENCES "RECEPCION" ("ID_RECEPCIONISTA") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DIAGNOSTICO
--------------------------------------------------------

  ALTER TABLE "DIAGNOSTICO" ADD FOREIGN KEY ("ID_MASCOTA")
	  REFERENCES "MASCOTA" ("ID_MASCOTA") ENABLE;
  ALTER TABLE "DIAGNOSTICO" ADD FOREIGN KEY ("COD_MEDICO")
	  REFERENCES "MEDICO" ("COD_MEDICO") ENABLE;
  ALTER TABLE "DIAGNOSTICO" ADD FOREIGN KEY ("ID_CITA")
	  REFERENCES "CITA" ("ID_CITA") ENABLE;
  ALTER TABLE "DIAGNOSTICO" ADD FOREIGN KEY ("COD_HISTORIAL")
	  REFERENCES "HISTORIAL_MEDICO" ("COD_HISTORIAL") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table HISTORIAL_MEDICO
--------------------------------------------------------

  ALTER TABLE "HISTORIAL_MEDICO" ADD FOREIGN KEY ("ID_MASCOTA")
	  REFERENCES "MASCOTA" ("ID_MASCOTA") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MASCOTA
--------------------------------------------------------

  ALTER TABLE "MASCOTA" ADD FOREIGN KEY ("DNI")
	  REFERENCES "CLIENTE" ("DNI") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RECETA
--------------------------------------------------------

  ALTER TABLE "RECETA" ADD FOREIGN KEY ("ID_MEDICAMENTO")
	  REFERENCES "LABORATORIO" ("ID_MEDICAMENTO") ENABLE;
  ALTER TABLE "RECETA" ADD FOREIGN KEY ("ID_DIAGNOSTICO")
	  REFERENCES "DIAGNOSTICO" ("ID_DIAGNOSTICO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RECIBO
--------------------------------------------------------

  ALTER TABLE "RECIBO" ADD FOREIGN KEY ("ID_RECETA")
	  REFERENCES "RECETA" ("ID_RECETA") ENABLE;
  ALTER TABLE "RECIBO" ADD FOREIGN KEY ("DNI")
	  REFERENCES "CLIENTE" ("DNI") ENABLE;
